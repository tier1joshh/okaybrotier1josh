-- If you need to grab your HWID / ClientID then you can use the setclipboard() function, or you can just copy it out the Developer console. (You can access this by pressing F9 while in a game.)

-- If you want to learn how to use the setclipboard() function check the getHWID.lua file within this repository.

local HWIDTable = loadstring(game:HttpGet("https://pastebin.com/raw/mZENN0j1"))() -- We are making a variable for where your HWID / ClientID table is going to be located. (You can use pastebin / github)

local HWID = game:GetService("RbxAnalyticsService"):GetClientId() -- We are creating a variable to get your own HWID / ClientID so we can search through the table for it.

--[[
    Down below you will see a for loop and I will explain it's purpose here.

    if one of the value's (string) is in the HWID table, then it will print "The HWID is Whitelisted. HWID:" then it will also print your HWID.

    if one of the value's (string) is not within the HWID table, then it will print "The HWID is not Whitelisted. HWID:" then it will also print out your HWID.
]]

for i,v in pairs(HWIDTable) do 
    if v == HWID then
        print ("The HWID is Whitelisted. HWID: ", HWID)

--█▀█ █▀▀ █▀█ █▀▄▀█ █▀█ ░ █░░ █░█ ▄▀█--
--█▄█ █▄▄ █▄█ █░▀░█ █▀▀ ▄ █▄▄ █▄█ █▀█--

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/tier1joshh/gui123/main/gui123%7Ctier1josh"))()

local Notif = library:InitNotifications()

for i = 1,1,-1 do 
    task.wait(0.05)
    local LoadingXSX = Notif:Notify("Loading 0Comp.lua, please be patient.", 3, "information") -- notification, alert, error, success, information
end 

for i = 1,1,-1 do 
    task.wait(5)
    local LoadingXSX = Notif:Notify("0Comp.lua finished loading.", 3, "information") -- notification, alert, error, success, information
    local LoadingXSX = Notif:Notify("0Comp.lua | Thank you for choosing us.", 6, "information") -- notification, alert, error, success, information
end 

library.title = "0Comp.lua | Simple ui"

library:Introduction()
wait(1)
local Init = library:Init()

local Tab1 = Init:NewTab("Rage")

local Section1 = Tab1:NewSection("SilentAim/Camlock")


local Button1 = Tab1:NewButton("SilentAim | Q to Toggle", function()
    print("one")

    getgenv().Riot = {
    
        Main = {
            ['Enabled'] = true,
            ['Keybind'] = Enum.KeyCode.Q,
            ['HitPart'] = "UpperTorso", --Options: "Head", "UpperTorso", "HumanoidRootPart" or "LowerTorso" ~ Other: "Random Upper", "Random Lower" and "Crazy"
            ['AirShot_Function'] = true,
            ['Airshot_Part'] = "Head",
            ['Notifcation'] = true,
            ['Notifcation_Type'] = "Xaxa", -- Types: "Xaxa", "Kali" or "Roblox"
            ['Prediction'] = 0.13873,
        }, 
     
        Auto_Prediction_Section = {
            ['Auto_Prediction'] = true,
            ['Tick'] = 0.1, -- refresh rate   
            ['P10'] = 0.135,
            ['P20'] = 0.05,
            ['P30'] = 0.11,
            ['P40'] = 0.1256,
            ['P50'] = 0.1225,
            ['P60'] = 0.1229,
            ['P70'] = 0.131,
            ['P80'] = 0.134,
            ['P90'] = 0.136,
            ['P100'] = 0.13,
            ['P110'] = 0.146,
            ['P120'] = 0.149,
            ['P130'] = 0.151,
            ['P140'] = 0.153,
            ['P150'] = 0.1555,
        },
        
        Resolver = {
            ['Detect_Desync'] = true,
            ['Detect_Desync_Keybind'] = Enum.KeyCode.V,
        },
     
        Checks = {
            ['WallChecked'] = true,
            ['KoCheck'] = true,
            ['CrewCheck'] = true,
        },
     
        Advanced_Settings = {
            ['Mouse_Position_Type'] = "UpdateMousePos", -- UpdateMousePos for da hood and other copys, MousePos For hood modded
        },
     
        Hit_Chams = {
            ['Enable'] = true,
            ['Wait_Time'] = 0.45,
     
            ['Material'] = "ForceField",
            ['Color'] = Color3.fromRGB(255,105,180),
            ['Transparency'] = 0,
     
        },
     
        Box_Visual = {
            ['Visible'] = true,
            ['Color'] = Color3.fromRGB(0, 0, 0),
            ['Transparency'] = 0.3,
            ['Shape'] = "Box", -- Options: "Ball", "Box", "Cylinder"
            ['Size'] = "Medium",-- Options: "Small", "Medium", "Large"
            ['Material'] = "ForceField", -- Options: "ForceField", "SmoothPlastic", "Neon" or  "Glass"
        },
     
        Dot_Visual = {
            ['Visible'] = false,
            ['Color'] = Color3.fromRGB(255, 255, 255),
            ['Size'] = "Large", -- Options: "Small", "Medium", Large
        },    
     
        Fov_Visual = {
            ['Visible'] = false,
            ['Color'] = Color3.fromRGB(255, 255, 255),
            ['Filled'] = false,
            ['Radius'] = 175,
            ['Transparency'] = 0.4,
            ['NumSides'] = 0,
            ['Thickness'] = 1,
        },
     
        HighLight_Visual = {
     
            -- Target-Chams For Highlight
     
            ['Highlight_Target'] = true,
            ['Highlight_Color_Fill'] = Color3.fromRGB(0, 0, 0),
            ['Highlight_Color_OutLine'] = Color3.fromRGB(255,182,193),
     
            -- Hit-Chams For HighLight
     
            ['Highlight_Hit_Chams'] = true,
            ['Highlight_Hit_OutLine'] = Color3.fromRGB(0, 0, 0),
     
        },
     
        Gun_Visuals = {
            ['Enable'] = true,
            ['GunMats'] = "ForceField",
     
            ['GunColor'] = Color3.fromRGB(255,182,193),
            ['GunReflectance'] = 1,
            ['GunTransparency'] = 0,
            ['GunBeam'] = true,
            ['GunBeamColor'] = Color3.fromRGB(255,182,193),
     
            ['GunTexture'] = false,
            ['GunTextureId'] = "11516328794",
     
        },
     
        Cursor_Visuals = {
            ['Enable'] = false,
     
            ['Color'] = Color3.fromRGB(255, 255, 255),
            ['Border_Color'] = Color3.fromRGB(0, 0, 0),
     
     
            ['Custom_Crosshair'] = true,
            ['Custom_Crosshair_Id'] = "12732661801",
     
            ['Rotation'] = true,
            ['Rotation_Power'] = 30,
     
        },
     
        --// Other
     
        Options = {
            ['Headless'] = true,
            ['Korblox'] = false,
        },
        
        Fps_Unlocker = {
            ['Enabled'] = true,
            ['Cap'] = 360,
        },
     
     }
     
     
     
     --loadstring(game:HttpGet("https://raw.githubusercontent.com/zxwazcc/TES/main/TEST"))();
     --loadstring(game:HttpGet("https://raw.githubusercontent.com/zxwazcc/ad/main/wadwa"))();
     
     --------------------------------------------
     
     local notificationLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/laagginq/ui-libraries/main/xaxas-notification/src.lua"))();
     local notifications = notificationLibrary.new({            
        NotificationLifetime = 1.5, 
        NotificationPosition = "Middle",
        
        TextFont = Enum.Font.Code,
        TextColor = Color3.fromRGB(255, 255, 255),
        TextSize = 17,
        
        TextStrokeTransparency = 0, 
        TextStrokeColor = Color3.fromRGB(0, 0, 0)
     });
     
     --
     
     local NotifyLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua"))()
     local Notify = NotifyLibrary.Notify
     
     
     --------------------------------------------
     
     
     
     repeat
        wait()
     until game:IsLoaded()
     
     --// Riot
     local placemarker = Instance.new("Part", game.Workspace)
     
     function makemarker(Parent, Adornee, Color, Size, Size2)
        local e = Instance.new("BillboardGui", Parent)
        e.Name = "haunts0001"
        e.Adornee = Adornee
        e.Size = UDim2.new(Size, Size2, Size, Size2)
        e.AlwaysOnTop = true
        local a = Instance.new("Frame", e)
        a.Size = UDim2.new(1, 0, 1, 0)
        a.BackgroundTransparency = 0
        a.BackgroundColor3 = Color
        local g = Instance.new("UICorner", a)
        g.CornerRadius = UDim.new(50, 50)
        return(e)
     end
     
     local data = game.Players:GetPlayers()
     
     function noob(player)
        local character
        repeat wait() until player.Character
        local handler = makemarker(guimain, player.Character:WaitForChild("HumanoidRootPart"), getgenv().Riot.Dot_Visual.Color, 0.3, 3)
        handler.Name = player.Name
        player.CharacterAdded:connect(function(Char) handler.Adornee = Char:WaitForChild("HumanoidRootPart") end)
     end
     
     for i = 1, #data do
        if data[i] ~= game.Players.LocalPlayer then
            noob(data[i])
        end
     end
     
     game.Players.PlayerAdded:connect(function(Player)
        noob(Player)
     end)
     
     spawn(function()
        placemarker.Anchored = true
        placemarker.CanCollide = false
        placemarker.Transparency = 1
        if getgenv().Riot.Dot_Visual.Visible then
        makemarker(placemarker, placemarker, getgenv().Riot.Dot_Visual.Color , 0.40, 0)
        end
     end)
     
     
     --// Box Misc
     local Tracer = Instance.new("Part", game.Workspace)
     Tracer.Name = "haunts0001"	
     Tracer.Anchored = true		
     Tracer.CanCollide = false
     Tracer.Transparency = getgenv().Riot.Box_Visual.Transparency
     Tracer.Parent = game.Workspace	
     Tracer.Color = getgenv().Riot.Box_Visual.Color
     Tracer.Material = getgenv().Riot.Box_Visual.Material
     
     if getgenv().Riot.Box_Visual.Shape == "Ball" then
        Tracer.Shape = Enum.PartType.Ball
     elseif getgenv().Riot.Box_Visual.Shape == "Box" then
        Tracer.Shape = Enum.PartType.Block
     elseif getgenv().Riot.Box_Visual.Shape == "Cylinder" then
        Tracer.Shape = Enum.PartType.Cylinder
     end
     
     
     if getgenv().Riot.Box_Visual.Size == "Small" then
        Tracer.Size = Vector3.new(4, 4, 4)
     elseif getgenv().Riot.Box_Visual.Size == "Medium" then
        Tracer.Size = Vector3.new(7, 7, 7)
     elseif getgenv().Riot.Box_Visual.Size == "Large" then
        Tracer.Size = Vector3.new(12, 12, 12)
     end
     
        
     --// Circle
     local plry = game.Players.LocalPlayer
     local mouse = plry:GetMouse()
     local Runserv = game:GetService("RunService")
     
     circle = Drawing.new("Circle")
     circle.Color = getgenv().Riot.Fov_Visual.Color
     circle.Thickness = getgenv().Riot.Fov_Visual.Thickness 
     circle.NumSides = getgenv().Riot.Fov_Visual.NumSides
     circle.Radius = getgenv().Riot.Fov_Visual.Radius
     circle.Thickness = getgenv().Riot.Fov_Visual.Thickness
     circle.Transparency = getgenv().Riot.Fov_Visual.Transparency
     circle.Visible = getgenv().Riot.Fov_Visual.Visible
     circle.Filled = getgenv().Riot.Fov_Visual.Filled
     
     Runserv.RenderStepped:Connect(function()
        circle.Position = Vector2.new(mouse.X,mouse.Y+35)
     end)
        
     local guimain = Instance.new("Folder", game.CoreGui)
     local CC = game:GetService("Workspace").CurrentCamera
     local LocalMouse = game.Players.LocalPlayer:GetMouse()
     local Locking = false
        
            
        --
        if getgenv().CheckIfScriptLoaded == true then
            game.StarterGui:SetCore("SendNotification", {
            Title = "0Comp.lua",
            Text = "Camlock is loaded please rejoin!",
            Duration = 3,
            Icon = "rbxassetid://14954527939"
            })
            return
        end
        
     getgenv().CheckIfScriptLoaded = true
        
     local UserInputService = game:GetService("UserInputService")
     local LocalHL = Instance.new("Highlight")
     
     UserInputService.InputBegan:Connect(function(keygo,ok)
        if (not ok) then
            if (keygo.KeyCode == getgenv().Riot.Main.Keybind) then
                if getgenv().Riot.Main.Enabled == true then
                   Locking = not Locking
                   
                   if Locking then
     
                        Plr =  getClosestPlayerToCursor()
     
                        --// Hit Chams [High-Light]
     
                        if getgenv().Riot.HighLight_Visual.Highlight_Hit_Chams == true then
                            local oldHealth = Plr.Character.Humanoid.Health
                            Plr.Character.Humanoid.HealthChanged:Connect(function(newHealth)
                                local healthDifference = newHealth - oldHealth
                                    if newHealth < oldHealth then 
                                        LocalHL.Parent = Plr.Character
                                        LocalHL.FillColor =  getgenv().Riot.HighLight_Visual.Highlight_Hit_Fill
                                        LocalHL.OutlineColor = getgenv().Riot.HighLight_Visual.Highlight_Hit_OutLine
                                        wait(0.50)
                                        LocalHL.FillColor = getgenv().Riot.HighLight_Visual.Highlight_Color_Fill
                                        LocalHL.OutlineColor = getgenv().Riot.HighLight_Visual.Highlight_Color_OutLine
     
                                        if newHealth > oldHealth then 
                                            LocalHL.Parent = game.CoreGui
                                        end
                                    end
     
                                    if Plr.Character.BodyEffects.KO == true and Plr.Character.BodyEffects.Dead == true then
                                        LocalHL.Parent = game.CoreGui
                                    end
                                oldHealth = newHealth 
                            end)
                        end
     
                        --// Test
     
                        
                        local oldHealt = Plr.Character.Humanoid.Health
                        
                        if getgenv().Riot.Hit_Chams.Enable == true then
                           
                            Plr.Character.Humanoid.HealthChanged:Connect(function(neHealth)
     
                                local Clone = Plr.Character:Clone()
     
                                if neHealth > oldHealt then 
                                    Clone:Destroy()
                                end
     
                                if Plr.Character.Humanoid.Health < 0 then
                                    Clone:Destroy()
                                end
     
                                if neHealth < oldHealt then 
                                        
                                    
                                        -- Main Hit-Chams --
     
                                    Plr.Character.Archivable = true
                                    for _,Obj in next, Clone:GetDescendants() do
                                        if Obj.Name == "HumanoidRootPart" or Obj:IsA("Humanoid") or Obj:IsA("LocalScript") or Obj:IsA("Script") or Obj:IsA("Decal") then
                                            Obj:Destroy()
                                        elseif Obj:IsA("BasePart") or Obj:IsA("Meshpart") or Obj:IsA("Part") then
                                            Obj.CanCollide = false
                                            Obj.Anchored = true
                                            Obj.Material = getgenv().Riot.Hit_Chams.Material
                                            Obj.Color = getgenv().Riot.Hit_Chams.Color
                                            Obj.Transparency = getgenv().Riot.Hit_Chams.Transparency
                                            Obj.Size = Obj.Size + Vector3.new(0.03, 0.03, 0.03)
                                        end
                                        
                                        -- Destroys All Part Of Chams -- 
                                        
                                        if Obj:IsA("Accessory") then
                                            Obj:Destroy()
                                        end
                                        if Obj:IsA("Shirt") then
                                            Obj:Destroy()
                                        end
                                        if Obj:IsA("Pants") then
                                            Obj:Destroy()
                                        end
                                        if Obj:IsA("Tool") then
                                            Obj:Destroy()
                                        end
                                        pcall(function()
                                            Obj.CanCollide = false
                                        end) 
     
                                    end
     
                                    -- Makes The Chams When Player Is Target --
     
                                    Clone.Parent = game.Workspace
                                    wait(getgenv().Riot.Hit_Chams.Wait_Time)
                                    Clone:Destroy()
                                end
                                oldHealt = neHealth 
                            end)
                        end
     
     
                        --// All Notifcations
     
                        if getgenv().Riot.HighLight_Visual.Highlight_Target == true then
                            LocalHL.Parent = Plr.Character
                            LocalHL.FillColor = getgenv().Riot.HighLight_Visual.Highlight_Color_Fill
                            LocalHL.OutlineColor = getgenv().Riot.HighLight_Visual.Highlight_Color_OutLine
                        else
                            LocalHL.Parent = game.CoreGui
                        end
     
                        if getgenv().Riot.Main.Notifcation == true and getgenv().Riot.Main.Notifcation_Type == "Roblox" then
                            game.StarterGui:SetCore("SendNotification", {
                            Title = "0Comp.lua";
                            Text = "Locked to: "..tostring(Plr.Character.Humanoid.DisplayName);
                            Icon = "rbxassetid://14954527939"
                            })
                        elseif getgenv().Riot.Main.Notifcation == true and getgenv().Riot.Main.Notifcation_Type == "Xaxa" then
                            notifications:BuildNotificationUI();
                            notifications:Notify("Locked to: " .. Plr.Character.Humanoid.DisplayName);
                        elseif getgenv().Riot.Main.Notifcation == true and getgenv().Riot.Main.Notifcation_Type == "Kali" then
                            Notify({
                                Title = "0Comp.lua",
                                Description = "Locked to: " .. Plr.Character.Humanoid.DisplayName,
                                Duration = 4
                            })
                        end
     
                
                    elseif not Locking then
     
                        if getgenv().Riot.Hit_Chams.Enable == true then
                            if Plr.Character.Humanoid.Health < 0 and Plr.Character.BodyEffects.KO.Value == true then
                                Clone:Destroy()
                            elseif Plr.Character.BodyEffects.Dead.Value == true then
                                Clone:Destroy()
                            end
                        end
     
                        if getgenv().Riot.HighLight_Visual.Highlight_Target == true then
                            LocalHL.Parent = game.CoreGui
                        end
        
                        if getgenv().Riot.HighLight_Visual.Highlight_Hit_Chams == true then
                            LocalHL.Parent = game.CoreGui
                        end
     
                        if getgenv().Riot.Main.Notifcation == true and getgenv().Riot.Main.Notifcation_Type == "Roblox" then
                            game.StarterGui:SetCore("SendNotification", {
                            Title = "0Comp.lua";
                            Text = "Unlocked";
                            Icon = "rbxassetid://14954527939"
                            })
                        elseif getgenv().Riot.Main.Notifcation == true and getgenv().Riot.Main.Notifcation_Type == "Xaxa" then
                            notifications:BuildNotificationUI();
                            notifications:Notify("Unlocked");
                        elseif getgenv().Riot.Main.Notifcation == true and getgenv().Riot.Main.Notifcation_Type == "Kali" then
                            Notify({
                                Title = "0Comp.lua",
                                Description = "Unlocked",
                                Duration = 4
                            })
                        elseif getgenv().Riot.Main.Enabled == false then
                            game.StarterGui:SetCore("SendNotification", {
                            Title = "0Comp.lua",
                            Text = "Target isn't enabled",
                            Duration = 5,
                            Icon = "rbxassetid://14954527939"
                    
                            })
                        end
                    end
                end
            end
        end
     end)
     
     --
     
     function getClosestPlayerToCursor()
         local closestPlayer
         local shortestDistance = circle.Radius
     
         for i, v in pairs(game.Players:GetPlayers()) do
             if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("LowerTorso") then
                 local pos = CC:WorldToViewportPoint(v.Character.PrimaryPart.Position)
                 local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(LocalMouse.X, LocalMouse.Y)).magnitude
                 if magnitude < shortestDistance then
                     closestPlayer = v
                     shortestDistance = magnitude
                 end
             end
         end
         return closestPlayer
     end
     
     --
     
     if getgenv().Riot.Box_Visual.Visible then
         game:GetService("RunService").RenderStepped:connect(function()
             if Locking and Plr.Character:FindFirstChild("HumanoidRootPart") then
                 Tracer.CFrame = CFrame.new(Plr.Character.HumanoidRootPart.Position + (Plr.Character.HumanoidRootPart.Velocity * getgenv().Riot.Main.Prediction))
             else
                 Tracer.CFrame = CFrame.new(0, 9999, 0)
             end
         end)
     end
     
     if getgenv().Riot.Dot_Visual.Visible then
        game:GetService("RunService").RenderStepped:connect(function()
             if Locking and Plr.Character:FindFirstChild("HumanoidRootPart") then
                placemarker.CFrame = CFrame.new(Plr.Character.HumanoidRootPart.Position + (Plr.Character.HumanoidRootPart.Velocity * getgenv().Riot.Main.Prediction))
             else
                placemarker.CFrame = CFrame.new(0, 9999, 0)
             end
         end)
     end
       
     --
     
     local rawmetatable = getrawmetatable(game)
     local old = rawmetatable.__namecall
     setreadonly(rawmetatable, false)
     rawmetatable.__namecall = newcclosure(function(...)
         local args = {...}
         if Locking and getnamecallmethod() == "FireServer" and args[2] == getgenv().Riot.Advanced_Settings.Mouse_Position_Type then
             args[3] = Plr.Character[getgenv().Riot.Main.HitPart].Position+(Plr.Character[getgenv().Riot.Main.HitPart].Velocity * getgenv().Riot.Main.Prediction)
             return old(unpack(args))
         end
         return old(...)
     end)
     
     local WallCheck = function(destination, ignore)
        if getgenv().Riot.Checks.WallChecked then
            local Origin = Camera.CFrame.p
            local CheckRay = Ray.new(Origin, destination - Origin)
            local Hit = game.workspace:FindPartOnRayWithIgnoreList(CheckRay, ignore)
            return Hit == nil
        else
            return true
        end
     end
     
     --// Resolver
     
     if getgenv().Riot.Resolver.Detect_Desync == true then
        local RunService = game:GetService("RunService")
     
        local function zeroOutYVelocity(hrp)
            hrp.Velocity = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Z)
            hrp.AssemblyLinearVelocity = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Z)
        end
     
        local function onPlayerAdded(player)
            player.CharacterAdded:Connect(function(character)
                local hrp = character:WaitForChild("HumanoidRootPart")
                zeroOutYVelocity(hrp)
            end)
        end
     
     
     
        game.Players.PlayerAdded:Connect(onPlayerAdded)
        game.Players.PlayerRemoving:Connect(onPlayerRemoving)
     
        RunService.Heartbeat:Connect(function()
            pcall(function()
                for i, player in pairs(game.Players:GetChildren()) do
                    if player.Name ~= game.Players.LocalPlayer.Name then
                        local hrp = player.Character.HumanoidRootPart
                        zeroOutYVelocity(hrp)
                    end
                end
            end)
        end)
     end
     
     
     
     
     
     local networtserviceping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
     local networthmax = string.split(networtserviceping,'(')
     local P = tonumber(networthmax[1])
     
     if getgenv().Riot.Auto_Prediction_Section.Auto_Prediction == true then
        if P < 150 then
            getgenv().Riot.Main.Prediction = getgenv().Riot.Auto_Prediction_Section.P150
        elseif P < 140 then
            getgenv().Riot.Main.Prediction = getgenv().Riot.Auto_Prediction_Section.P140
        elseif P < 130 then
            getgenv().Riot.Main.Prediction = getgenv().Riot.Auto_Prediction_Section.P130
        elseif P < 120 then
            getgenv().Riot.Main.Prediction = getgenv().Riot.Auto_Prediction_Section.P120
        elseif P < 110 then
            getgenv().Riot.Main.Prediction = getgenv().Riot.Auto_Prediction_Section.P110
        elseif P < 100 then
            getgenv().Riot.Main.Prediction = getgenv().Riot.Auto_Prediction_Section.P100
        elseif P < 90 then
            getgenv().Riot.Main.Prediction = getgenv().Riot.Auto_Prediction_Section.P90
        elseif P < 80 then
            getgenv().Riot.Main.Prediction = getgenv().Riot.Auto_Prediction_Section.P80
        elseif P < 70 then
            getgenv().Riot.Main.Prediction = getgenv().Riot.Auto_Prediction_Section.P70
        elseif P < 60 then
            getgenv().Riot.Main.Prediction = getgenv().Riot.Auto_Prediction_Section.P60
        elseif P < 50 then
            getgenv().Riot.Main.Prediction = getgenv().Riot.Auto_Prediction_Section.P50
        elseif P < 40 then
            getgenv().Riot.Main.Prediction = getgenv().Riot.Auto_Prediction_Section.P40
        elseif P < 30 then
            getgenv().Riot.Main.Prediction = getgenv().Riot.Auto_Prediction_Section.P30
        elseif P < 20 then
            getgenv().Riot.Main.Prediction = getgenv().Riot.Auto_Prediction_Section.P20
        elseif P < 10 then
            getgenv().Riot.Main.Prediction = getgenv().Riot.Auto_Prediction_Section.P10
        end
       wait(getgenv().Riot.Auto_Prediction_Section.Tick)
     end
     
     --// Resolver
     
     
     --
     
     game:GetService("RunService").RenderStepped:Connect(function()
        if getgenv().Riot.Gun_Visuals.GunBeam == true then
            for _,v in pairs(game.Workspace.Ignored:GetChildren()) do
                if v.Name == "BULLET_RAYS" then
                    for _,f in pairs(v:GetChildren()) do
                        if f.Name == "GunBeam" then
                            --
                            f.Brightness = 10
                            f.TextureSpeed = 1
                            f.TextureLength = 10
                            f.LightInfluence = -1
                            f.Width0 = 0.1
                            f.Width1 = 0.1
                            f.LightEmission = 1
                            f.Texture = "9150663556"
                            f.Segments = 0
                            f.FaceCamera = true
                            --
                            f.Color = ColorSequence.new{
                                ColorSequenceKeypoint.new(0, getgenv().Riot.Gun_Visuals.GunBeamColor),
                                ColorSequenceKeypoint.new(1, Color3.fromRGB(105, 95, 245)),
                                ColorSequenceKeypoint.new(1, getgenv().Riot.Gun_Visuals.GunBeamColor)
                            }
                            --
                        end
                    end
                end
            end
        end
     end)
     
     
     while true do
        wait(0.5)
     
        -- Untitled Hood --
     
        if game.PlaceId == 9183932460 then
     
            local lp = game:GetService("Players").LocalPlayer
            local lpn = game:GetService("Players").LocalPlayer.Name
     
            local dbcheck = lp.Backpack:FindFirstChild("[Double-Barrel SG]") or lp.Character:FindFirstChild("[Double-Barrel SG]")
            local revcheck = lp.Backpack:FindFirstChild("[Revolver]") or lp.Character:FindFirstChild("[Revolver]")
            local smgcheck = lp.Backpack:FindFirstChild("[SMG]") or lp.Character:FindFirstChild("[SMG]")
     
            
            if getgenv().Riot.Gun_Visuals.Enable == true then
            
                if dbcheck and not lp:FindFirstChildOfClass("[Double-Barrel SG]") then
            
                    dbcheck.Default.Material = getgenv().Riot.Gun_Visuals.GunMats
                    
                    dbcheck.Default.Color = getgenv().Riot.Gun_Visuals.GunColor
                    
                    dbcheck.Default.Reflectance = getgenv().Riot.Gun_Visuals.GunReflectance
                    
                    dbcheck.Default.Transparency = getgenv().Riot.Gun_Visuals.GunTransparency
                    
                    dbcheck.Default.TextureID = ''
            
                    if getgenv().Riot.Gun_Visuals.GunTexture == true then
                        dbcheck.Default.TextureID = getgenv().Riot.Gun_Visuals.GunTextureId
                    else 
                        dbcheck.Default.TextureID = ''
                    end
                end
     
                if revcheck and not lp:FindFirstChildOfClass("[Revolver]") then
                            
                    revcheck.Default.Material = getgenv().Riot.Gun_Visuals.GunMats
                    
                    revcheck.Default.Color = getgenv().Riot.Gun_Visuals.GunColor
                    
                    revcheck.Default.Reflectance = getgenv().Riot.Gun_Visuals.GunReflectance
                    
                    revcheck.Default.Transparency = getgenv().Riot.Gun_Visuals.GunTransparency
                    
                    revcheck.Default.TextureID = ''
     
                    if getgenv().Riot.Gun_Visuals.GunTexture == true then
                        revcheck.Default.TextureID = getgenv().Riot.Gun_Visuals.GunTextureId
                    else 
                        revcheck.Default.TextureID = ''
                    end
                end
            
                if smgcheck and not lp:FindFirstChildOfClass("[SMG]") then
            
                    smgcheck.Default.Material = getgenv().Riot.Gun_Visuals.GunMats
                    
                    smgcheck.Default.Color = getgenv().Riot.Gun_Visuals.GunColor
                    
                    smgcheck.Default.Reflectance = getgenv().Riot.Gun_Visuals.GunReflectance
                    
                    smgcheck.Default.Transparency = getgenv().Riot.Gun_Visuals.GunTransparency
                    
                    smgcheck.Default.TextureID = ''
     
                    if getgenv().Riot.Gun_Visuals.GunTexture == true then
                        smgcheck.Default.TextureID = getgenv().Riot.Gun_Visuals.GunTextureId
                    else 
                        smgcheck.Default.TextureID = ''
                    end
     
                end
            end
        end
     
        if game.PlaceId == 7242996350 then
     
            local lp = game:GetService("Players").LocalPlayer
            local lpn = game:GetService("Players").LocalPlayer.Name
     
     
            local dbcheck11 = lp.Backpack:FindFirstChild("[Double-Barrel SG]") or lp.Character:FindFirstChild("[Double-Barrel SG]")
            local revcheck11 = lp.Backpack:FindFirstChild("[Revolver]") or lp.Character:FindFirstChild("[Revolver]")
     
     
            if getgenv().Riot.Gun_Visuals.Enable == true then
                
     
                if dbcheck11 and not lp:FindFirstChildOfClass("[Double-Barrel SG]") then
     
                    dbcheck11.Handle.Material = getgenv().Riot.Gun_Visuals.GunMats
                    
                    dbcheck11.Handle.Color = getgenv().Riot.Gun_Visuals.GunColor
                    
                    dbcheck11.Handle.Reflectance = getgenv().Riot.Gun_Visuals.GunReflectance
                    
                    dbcheck11.Handle.Transparency = getgenv().Riot.Gun_Visuals.GunTransparency
                    
                    dbcheck11.Handle.TextureID = ''
     
                    if getgenv().Riot.Gun_Visuals.GunTexture == true then
                        dbcheck11.Handle.TextureID = getgenv().Riot.Gun_Visuals.GunTextureId
                    else 
                        dbcheck11.Handle.TextureID = ''
                    end
     
                end
     
                if revcheck11 and not lp:FindFirstChildOfClass("[Revolver]") then
                                
                    revcheck11.Handle.Material = getgenv().Riot.Gun_Visuals.GunMats
                    
                    revcheck11.Handle.Color = getgenv().Riot.Gun_Visuals.GunColor
                    
                    revcheck11.Handle.Reflectance = getgenv().Riot.Gun_Visuals.GunReflectance
                    
                    revcheck11.Handle.Transparency = getgenv().Riot.Gun_Visuals.GunTransparency
                    
                    revcheck11.Handle.TextureID = ''
     
                    if getgenv().Riot.Gun_Visuals.GunTexture == true then
                        revcheck11.Handle.TextureID = getgenv().Riot.Gun_Visuals.GunTextureId
                    else 
                        revcheck11.Handle.TextureID = ''
                    end
     
                end
            end
        end
     
     
     -- Hood Customs --
     
        if game.PlaceId == 9825515356 then
     
     
            local lp = game:GetService("Players").LocalPlayer
            local lpn = game:GetService("Players").LocalPlayer.Name
            local Wk = game:GetService("Workspace")
     
     
            local dbcheck22 = lp.Backpack:FindFirstChild("[DoubleBarrel]") or lp.Character:FindFirstChild("[DoubleBarrel]") 
            local revcheck22 = lp.Backpack:FindFirstChild("[Revolver]") or lp.Character:FindFirstChild("[Revolver]")
            local smgggcheck22 = lp.Backpack:FindFirstChild("[SMG]") or lp.Character:FindFirstChild("[SMG]")
     
     
            if getgenv().Riot.Gun_Visuals.Enable == true then
                    
                if dbcheck22 and not lp:FindFirstChildOfClass("[DoubleBarrel]") then
     
                    dbcheck22.Handle.Material = getgenv().Riot.Gun_Visuals.GunMats
                    
                    dbcheck22.Handle.Color = getgenv().Riot.Gun_Visuals.GunColor
                    
                    dbcheck22.Handle.Reflectance = getgenv().Riot.Gun_Visuals.GunReflectance
                    
                    dbcheck22.Handle.Transparency = getgenv().Riot.Gun_Visuals.GunTransparency
                    
                    dbcheck22.Handle.TextureID = ''
     
                    if getgenv().Riot.Gun_Visuals.GunTexture == true then
                        dbcheck22.Default.TextureID = getgenv().Riot.Gun_Visuals.GunTextureId
                    else 
                        dbcheck22.Default.TextureID = ''
                    end
     
                end
     
                if revcheck22 and not lp:FindFirstChildOfClass("[Revolver]") then
     
                    revcheck22.Handle.Material = getgenv().Riot.Gun_Visuals.GunMats
                    
                    revcheck22.Handle.Color = getgenv().Riot.Gun_Visuals.GunColor
                    
                    revcheck22.Handle.Reflectance = getgenv().Riot.Gun_Visuals.GunReflectance
                    
                    revcheck22.Handle.Transparency = getgenv().Riot.Gun_Visuals.GunTransparency
                    
                    revcheck22.Handle.TextureID = ''
     
                    if getgenv().Riot.Gun_Visuals.GunTexture == true then
                        revcheck22.Default.TextureID = getgenv().Riot.Gun_Visuals.GunTextureId
                    else 
                        revcheck22.Default.TextureID = ''
                    end
                end
     
                if smgggcheck22 and not lp:FindFirstChildOfClass("[SMG]") then
     
                    smgggcheck22.Handle.Material = getgenv().Riot.Gun_Visuals.GunMats
                    
                    smgggcheck22.Handle.Color = getgenv().Riot.Gun_Visuals.GunColor
                    
                    smgggcheck22.Handle.Reflectance = getgenv().Riot.Gun_Visuals.GunReflectance
                    
                    smgggcheck22.Handle.Transparency = getgenv().Riot.Gun_Visuals.GunTransparency
                    
                    smgggcheck22.Handle.TextureID = ''
     
                    if getgenv().Riot.Gun_Visuals.GunTexture == true then
                        smgcheck22.Default.TextureID = getgenv().Riot.Gun_Visuals.GunTextureId
                    else 
                        smgcheck22.Default.TextureID = ''
                    end
     
                end
            end
        end
     
     -- Da hood --
     
        if game.PlaceId == 2788229376 then
     
            local lp = game:GetService("Players").LocalPlayer
            local lpn = game:GetService("Players").LocalPlayer.Name
            local Wk = game:GetService("Workspace")
     
     
            local dbcheck33 = lp.Backpack:FindFirstChild("[Double-Barrel SG]") or lp.Character:FindFirstChild("[Double-Barrel SG]") 
            local revcheck33 = lp.Backpack:FindFirstChild("[Revolver]") or lp.Character:FindFirstChild("[Revolver]")
            local smgggcheck33 = lp.Backpack:FindFirstChild("[SMG]") or lp.Character:FindFirstChild("[SMG]")
     
            if getgenv().Riot.Gun_Visuals.Enable == true then
                    
                if dbcheck33 and not lp:FindFirstChildOfClass("[Double-Barrel SG]") then
     
                    dbcheck33.Default.Material = getgenv().Riot.Gun_Visuals.GunMats
                    
                    dbcheck33.Default.Color = getgenv().Riot.Gun_Visuals.GunColor
                    
                    dbcheck33.Default.Reflectance = getgenv().Riot.Gun_Visuals.GunReflectance
                    
                    dbcheck33.Default.Transparency = getgenv().Riot.Gun_Visuals.GunTransparency
                    
                    dbcheck33.Default.TextureID = ''
     
                    if getgenv().Riot.Gun_Visuals.GunTexture == true then
                        dbcheck33.Default.TextureID = getgenv().Riot.Gun_Visuals.GunTextureId
                    else 
                        dbcheck33.Default.TextureID = ''
                    end
                end
     
                if revcheck33 and not lp:FindFirstChildOfClass("[Revolver]") then
     
                    revcheck33.Default.Material = getgenv().Riot.Gun_Visuals.GunMats
                    
                    revcheck33.Default.Color = getgenv().Riot.Gun_Visuals.GunColor
                    
                    revcheck33.Default.Reflectance = getgenv().Riot.Gun_Visuals.GunReflectance
                    
                    revcheck33.Default.Transparency = getgenv().Riot.Gun_Visuals.GunTransparency
                    
                    revcheck33.Default.TextureID = ''
     
                    if getgenv().Riot.Gun_Visuals.GunTexture == true then
                        revcheck33.Default.TextureID = getgenv().Riot.Gun_Visuals.GunTextureId
                    else 
                        revcheck33.Default.TextureID = ''
                    end
     
                end
     
                if smgggcheck33 and not lp:FindFirstChildOfClass("[SMG]") then
     
                   smgggcheck33.Default.Material = getgenv().Riot.Gun_Visuals.GunMats
                    
                   smgggcheck33.Default.Color = getgenv().Riot.Gun_Visuals.GunColor
                    
                   smgggcheck33.Default.Reflectance = getgenv().Riot.Gun_Visuals.GunReflectance
                    
                   smgggcheck33.Default.Transparency = getgenv().Riot.Gun_Visuals.GunTransparency
                    
                   smgggcheck33.Default.TextureID = ''
     
                    if getgenv().Riot.Gun_Visuals.GunTexture == true then
                        smgcheck33.Default.TextureID = getgenv().Riot.Gun_Visuals.GunTextureId
                    else 
                        smgcheck33.Default.TextureID = ''
                    end
     
                end
            end
        end
     wait(30)
     end
     
     RS.Heartbeat:Connect(function()
        if getgenv().Riot.Main.AirShot_Function == true and Plr.Character:FindFirstChild("Humanoid") then
            if Plr.Character.Humanoid.FloorMaterial == Enum.Material.Air and Plr.Character.Humanoid.Jump == true then
                getgenv().Riot.Main.HitPart = getgenv().Riot.Main.Airshot_Part
            else
                getgenv().Riot.Main.HitPart = getgenv().Riot.Main.HitPart
            end
        end
     end)
     
     if getgenv().Riot.Checks.CrewCheck == true then
        while true do
            local newPlayer = game.Players.PlayerAdded:wait()
            if player:IsInGroup(newPlayer.Group) then
                table.insert(Ignored.Players, newPlayer)
            end
        end
     end
     
     --
     
     if getgenv().Riot.Cursor_Visuals.Enable == true then
        local lpww = game.Players.LocalPlayer.Name
        local plrgui = game:GetService("Players").lpww.PlayerGui.MainScreenGui
     
        local top = plrgui.Aim.Top
        local bot = plrgui.Aim.Bottom
        local rig = plrgui.Aim.Right
        local leg = plrgui.Aim.Left
        local Crs = plrgui.Aim.CursorImage
     
        top.BorderColor3 = Color3.fromRGB(getgenv().Riot.Cursor_Visuals.Border_Color)
        top.BorderSizePixel = 1
        bot.BorderColor3 = Color3.fromRGB(getgenv().Riot.Cursor_Visuals.Border_Color)
        bot.BorderSizePixel = 1
        rig.BorderColor3 = Color3.fromRGB(getgenv().Riot.Cursor_Visuals.Border_Color)
        rig.BorderSizePixel = 1
        leg.BorderColor3 = Color3.fromRGB(getgenv().Riot.Cursor_Visuals.Border_Color)
        leg.BorderSizePixel = 1
        
        top.Color = Color3.fromRGB(getgenv().Riot.Cursor_Visuals.Color)
        bot.Color = Color3.fromRGB(getgenv().Riot.Cursor_Visuals.Color)
        rig.Color = Color3.fromRGB(getgenv().Riot.Cursor_Visuals.Color)
        leg.Color = Color3.fromRGB(getgenv().Riot.Cursor_Visuals.Color)
     
     end
     
     if getgenv().Riot.Cursor_Visuals.Custom_Crosshair == true then
        Crs.Texture = getgenv().Riot.Cursor_Visuals.Custom_Crosshair_Id
     end
     
     if getgenv().Riot.Cursor_Visuals.Rotation == true then
        while wait() do
            top.Rotation = top.Rotation + getgenv().Riot.Cursor_Visuals.Rotation_Power
            bot.Rotation = bot.Rotation + getgenv().Riot.Cursor_Visuals.Rotation_Power
            rig.Rotation = rig.Rotation - getgenv().Riot.Cursor_Visuals.Rotation_Power
            leg.Rotation = leg.Rotation - getgenv().Riot.Cursor_Visuals.Rotation_Power
        end
     end
     --
     
     game:GetService("RunService").Heartbeat:Connect(function()
     
        if getgenv().Riot.Options.Headless == true then
            game.Players.LocalPlayer.Character.Head.Transparency = 1
            for i,v in pairs(game.Players.LocalPlayer.Character.Head:GetChildren()) do
                if (v:IsA("Decal")) then
                    v.Transparency = 1
                end
            end
        end
     
        if getgenv().Riot.Options.Korblox == true then
            local ply = game.Players.LocalPlayer
            local chr = ply.Character
            chr.RightLowerLeg.MeshId = "902942093"
            chr.RightLowerLeg.Transparency = "1"
            chr.RightUpperLeg.MeshId = "http://www.roblox.com/asset/?id=902942096"
            chr.RightUpperLeg.TextureID = "http://roblox.com/asset/?id=902843398"
            chr.RightFoot.MeshId = "902942089"
            chr.RightFoot.Transparency = "1"
            game.Players.LocalPlayer.Character.Humanoid.Jump = false
            wait(1)
        end
     end)
     
     if getgenv().Riot.Fps_Unlocker.Enabled == true then
        setfpscap(getgenv().Riot.Fps_Unlocker.Cap)
     else 
        setfpscap(240)
     end
end)

local Button1 = Tab1:NewButton("Camlock | Q to toggle", function()
    print("one")
    getgenv().Nova = { -- // Some Stuff Isnt Working Due To Errors.
Options = {
    ['Key'] = "Your Whitelist Key.",
    ['Intro'] = true, -- // Currently Broken?
    ['Version'] = "Latest", -- // Latest Only Or Script Breaks.
    ['Intro_Type'] = "Funny" -- // "Notification", "Funny"
},
Silent = {
    ['Enabled'] = false,
    ['Key'] = "",
    ['Type'] = "Target", -- // Target, FOV
    ['HitChance'] = 400, 
    ['ThirdPerson'] = true,
    ['FirstPerson'] = true,
    ['Prediction'] = 0.13873,
    ['Ignore_Parts'] = false, -- // Wip
    ['Ignore_Parts'] = {"Parts"},
    ['HitPart'] = "UpperTorso",
    ['HitPart_Type'] = "Normal", -- // Normal
    ['UseKeyBind'] = true,
    ['Notifications'] = true,
    ['AirShot_Function'] = true,
    ['Airshot_Part'] = "UpperTorso"
},
FOV = {
  ['Silent'] = {
       ['Visible'] = false,
       ['Filled'] = false,
       ['Sides'] = 100,
       ['Size'] = 100.5,
       ['Transparency'] = 1,
       ['Thickness'] = 0.7,
       ['Color'] = Color3.fromRGB(1, 1, 1),
},
Aimbot = {
       ['UseFov'] = true,
       ['Visible'] = false,
       ['Filled'] = false,
       ['Sides'] = 20,
       ['Size'] = 100,
       ['Transparency'] = 1,
       ['Thickness'] = 1,
       ['Color'] = Color3.fromRGB(0, 0, 0)
       
     },
},     
FOV_Types = {
    ['Target'] = true,
},
Aimbot = { -- // Universal.
    ['Enabled'] = true,
    ['HitPart_Type'] = "Normal", -- // Normal
    ['Key'] = "Q",
    ['Prediction'] = 0.12,
    ['HitPart'] = "HumanoidRootPart",
    ['Airshot_Function'] = false,
    ['Airshot_HitPart'] = "LowerTorso",
    ['Distance'] = 12322423,
    ['Smoothing'] = false,
    ['Smoothness'] = 0.012
},
Shake = { -- // Keep This On.
  ['Shake'] = true,
    ['Shake_X'] = 0, -- // X
    ['Shake_Y'] = 0, -- // Y
    ['Shake_Z'] = 0 -- // Z
},
Easing = { 
    ['Style'] = "Put Ur Easing Style Here", -- // Easing Styles
    ['Direction'] = "Put Ur Easing Direction Here", -- // Easing Directions
},    
MemSpoofer = { -- // This Also Spoofs F9 Memory.
    ['Enabled'] = true,
    ['Most'] = 100,
    ['Least'] = 50
},
Checks = { -- Da Hood Checks.
    Silent = {
        ['Knocked'] = true, -- // 
        ['Crew'] = true, -- // Checks IF Player Is In The Same Crew As You.
        ['Wall'] = true, -- // Wall Check For Silent, Aim Assist.
        ['Friend'] = true, -- // Checks The Tab Thing To See If Plr Is Your Friend.
        ['Grabbed'] = true, -- // Checks If Player Is Grabbed.
        ['Anti_Curve'] = true -- X, Y, Z Stuff + Uses Character NOT Mouse.
    },
    Aimbot = {
        ['Wall'] = true, -- // Wall Check For Silent, Aim Assist.
        ['Knocked'] = true, -- // 
    
    }
},
Cmds = {
    ['Enabled'] = true,
    ['FOV_Type'] = "Silent", -- // Silent, Aimbot
    ['FOV_Size'] = "/f", -- // Fov Radius
    ['Predict_Type'] = "Silent", -- // "Silent", "Aimbot"
    ['Pred_Value'] = "!P",
},    
AntiGroundShots = {
    ['Enabled'] = true,
    ['Delay'] = 0.5
},
Resolver = { 
    ['Anti_Aim_Viewer'] = true,
    ['Enabled'] = true, -- // WIP
    ['Type'] = "Recalculation" -- // Recalculation, Direction, Velocity
},
AutoPrediction = {
 ['Enabled'] = false,
    ['RefreshRate'] = 0.1,
    ['Ping_10'] = 0.10,
    ['Ping_20'] = 0.11,
    ['Ping_30'] = 0.12,
    ['Ping_40'] = 0.123,
    ['Ping_50'] = 0.125,
    ['Ping_60'] = 0.127,
    ['Ping_70'] = 0.133,
    ['Ping_80'] = 0.134,
    ['Ping_90'] = 0.1365,
    ['Ping_100'] = 0.1374,
    ['Ping_110'] = 0.12,
    ['Ping_120'] = 0.12,
    ['Ping_130'] = 0.12,
    ['Ping_140'] = 0.13,
    ['Ping_150'] = 0.1405,
},
Text = {
   ['Enabled'] = true,
   ['Size'] = 12,
   ['Position'] = "bottomleft",

     
},
}

-- // Holders
local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()
-- // Noti function

local function SendNotification(text)
Notification:Notify(
    {Title = "0Comp.lua | .gg/z4XD93xHjQ", Description = "Press Q to toggle | "..text},
    {OutlineColor = Color3.fromRGB(111,111,111),Time = 3, Type = "image"},
    {Image = "", ImageColor = Color3.fromRGB(255,255,255)}
)
end 

SendNotification("Injecting.")
wait(1)
SendNotification("Loading Assets.")
wait(1)
SendNotification("Bypassing Anticheat... ")
wait(1)
SendNotification("Loading Into Workspace...")
wait(3)
SendNotification("Injected!")

    --
if getgenv().CheckIfScriptLoaded == true then

    SendNotification("Silent aim is loaded | Please rejoin.")
    return
end

getgenv().CheckIfScriptLoaded = true


if not LPH_OBFUSCATED then
LPH_JIT_MAX = function(...)
    return (...)
end
LPH_NO_VIRTUALIZE = function(...)
    return (...)
end
end

local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Client = LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local GetPlayers = Players.GetPlayers
local Mouse = LocalPlayer:GetMouse()
local RunService = game:GetService("RunService")
local Camera = game.Workspace.CurrentCamera
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local TPservice= game:GetService("TeleportService")
local GetPlayers = Players.GetPlayers
local Mouse = LocalPlayer:GetMouse()
local Workspace = game:GetService("Workspace")
local GuiService = game:GetService("GuiService")
local CurrentCamera = Workspace.CurrentCamera
local TeleportService = game:GetService("TeleportService")
local GetGuiInset = GuiService.GetGuiInset
local Circle1 = Drawing.new("Circle")
local Circle2 = Drawing.new("Circle")
local Plr,Plr2,IsTargetting

function WallCheck (destination, ignore)
if (getgenv().Nova.Checks.Silent.Wall) then
    local Origin = Camera.CFrame.p
    local CheckRay = Ray.new(Origin, destination - Origin)
    local Hit = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(CheckRay, ignore)
    return Hit == nil
else
    return true
end
end

local WTS = (function(Object)
local ObjectVector = CurrentCamera:WorldToScreenPoint(Object.Position)
return Vector2.new(ObjectVector.X, ObjectVector.Y)
end)

local Filter = (function(obj)
if (obj:IsA('BasePart')) then
    return true
end
end)

local MousePosVector2 = (function()
return Vector2.new(Mouse.X, Mouse.Y) 
end)




function SilentFOV()
if not (Circle2) then
  return
end
Circle2.Visible = getgenv().Nova.FOV.Silent.Visible
Circle2.Radius =  getgenv().Nova.FOV.Silent.Size * 2.1
Circle2.Position = Vector2.new(Mouse.X, Mouse.Y + GetGuiInset(GuiService).Y)
Circle2.Filled = getgenv().Nova.FOV.Silent.Filled
Circle2.Transparency = getgenv().Nova.FOV.Silent.Transparency
Circle2.Thickness = getgenv().Nova.FOV.Silent.Thickness
Circle2.NumSides = getgenv().Nova.FOV.Silent.Sides
Circle2.Color = getgenv().Nova.FOV.Silent.Color
return Circle2
end
RunService.Heartbeat:Connect(function() AimbotFOV() SilentFOV()end)


function AimbotFOV()
if not (Circle1) then
    return
end
Circle1.Visible = getgenv().Nova.FOV.Aimbot.Visible
Circle1.Radius =  getgenv().Nova.FOV.Aimbot.Size * 2.1
Circle1.Position = Vector2.new(Mouse.X, Mouse.Y + GetGuiInset(GuiService).Y)
Circle1.Filled = getgenv().Nova.FOV.Aimbot.Filled
Circle1.Transparency = getgenv().Nova.FOV.Aimbot.Transparency
Circle1.Thickness = getgenv().Nova.FOV.Aimbot.Thickness
Circle1.NumSides = getgenv().Nova.FOV.Aimbot.Sides
Circle1.Color = getgenv().Nova.FOV.Aimbot.Color
return Circle1
end

local ClosestPlrFromMouse = function()
local Target = nil
Closest = 1 / 0
for _ ,v in ipairs(Players:GetPlayers()) do
    if (v.Character and v ~= Client and v.Character:FindFirstChild("HumanoidRootPart")) and WallCheck(v.Character.HumanoidRootPart.Position, {Client, v.Character})  then
    local Position, OnScreen = Camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
    local Distance = (Vector2.new(Position.X, Position.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude
    if (Circle2.Radius > Distance and Distance < Closest and OnScreen and Position) then
    Closest = Distance
    Target = v
    end
    end
end
return Target
end

local GetClosestBodyPart = (function()
local ShortestDistance = math.huge
local BodyPart = nil
for _, v in next, game.Players:GetPlayers() do
    if (v ~= Client and v.Character and v.Character:FindFirstChild("Humanoid")) then
        for k, x in next, v.Character:GetChildren() do
            if (Filter(x)) then
                local Distance = (WTS(x) - MousePosVector2()).magnitude
                if (Distance < ShortestDistance) then
                    ShortestDistance = Distance
                    BodyPart = x
                end
            end
        end
    end
end
return BodyPart
end)



if getgenv().Nova.Aimbot.Airshot_Function == true then
if Plr.Character.Humanoid.Jump == true and Plr.Character.Humanoid.FloorMaterial == Enum.Material.Air then
    getgenv().Nova.Aimbot.HitPart = getgenv().Nova.Aimbot.Airshot_HitPart
else
    Plr.Character:WaitForChild("Humanoid").StateChanged:Connect(function(old,new)
    if new == Enum.HumanoidStateType.Freefall then
    getgenv().Nova.Aimbot.HitPart = getgenv().Nova.Aimbot.Airshot_HitPart
    else
    getgenv().Nova.Aimbot.HitPart = getgenv().Nova.Aimbot.HitPart
    end
    end)
end
end

Mouse.KeyDown:Connect(function(Key)
local Keybind = getgenv().Nova.Aimbot.Key:lower()
if (Key == Keybind) then
    if getgenv().Nova.Aimbot.Enabled == true then
    IsTargetting = not IsTargetting
    if IsTargetting then
    Plr = NearestPerson()
    else
    if Plr ~= nil then
    Plr = nil
    end
    end
   end
end
end)


if getgenv().Nova.FOV.Aimbot.UseFov == true then
function NearestPerson()
    local closestPlayer
    local shortestDistance = getgenv().Nova.FOV.Aimbot.Size
    for i, v in ipairs(game.Players:GetPlayers()) do
    pcall(function()
    if v ~= game.Players.LocalPlayer and v.Character and
    v.Character:FindFirstChild("Humanoid") and WallCheck(v.Character.HumanoidRootPart.Position, {Client, v.Character})  then
    local pos = CurrentCamera:WorldToViewportPoint(v.Character.PrimaryPart.Position)
    local magnitude =
    (Vector2.new(pos.X, pos.Y) - Vector2.new(Mouse.X, Mouse.Y)).magnitude
    if (Vector2.new(pos.X, pos.Y) - Vector2.new(Mouse.X, Mouse.Y)).magnitude < shortestDistance then
    closestPlayer = v
    shortestDistance = magnitude
    end
    end
    end)
    end
return closestPlayer
end

elseif getgenv().Nova.FOV.Aimbot.UseFov == false then
    function NearestPerson()
    local closestPlayer
    local shortestDistance = getgenv().Nova.Aimbot.Distance
    for i, v in ipairs(game.Players:GetPlayers()) do
    pcall(function()
    if v ~= game.Players.LocalPlayer and v.Character and
    v.Character:FindFirstChild("Humanoid") and WallCheck(v.Character.HumanoidRootPart.Position, {Client, v.Character}) then
    local pos = CurrentCamera:WorldToViewportPoint(v.Character.PrimaryPart.Position)
    local magnitude =
    (Vector2.new(pos.X, pos.Y) - Vector2.new(Mouse.X, Mouse.Y)).magnitude
    if (Vector2.new(pos.X, pos.Y) - Vector2.new(Mouse.X, Mouse.Y)).magnitude < shortestDistance then
    closestPlayer = v
    shortestDistance = magnitude
    end
    end
    end)
    end
    return closestPlayer
end
end



RunService.RenderStepped:Connect(function()
if getgenv().Nova.Aimbot.Enabled == true and Plr and Plr.Character ~= nil then
    if getgenv().Nova.Shake.Shake then
    local Main = CFrame.new(Camera.CFrame.p,Plr.Character[getgenv().Nova.Aimbot.HitPart].Position + Plr.Character[getgenv().Nova.Aimbot.HitPart].Velocity*getgenv().Nova.Aimbot.Prediction +
    Vector3.new(
    math.random(-getgenv().Nova.Shake.Shake_X,getgenv().Nova.Shake.Shake_X),
    math.random(-getgenv().Nova.Shake.Shake_Y,getgenv().Nova.Shake.Shake_Z),
    math.random(-getgenv().Nova.Shake.Shake_Z,getgenv().Nova.Shake.Shake_Z)
    )*1)
    Camera.CFrame = Camera.CFrame:Lerp(Main,getgenv().Nova.Aimbot.Smoothness,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,Enum.EasingStyle.Bounce,Enum.EasingDirection.Out,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out)
    else
    local Main = CFrame.new(Camera.CFrame.p,Plr.Character[getgenv().Nova.Aimbot.HitPart].Position + Plr.Character[getgenv().Nova.Aimbot.HitPart].Velocity*getgenv().Nova.Aimbot.Prediction)
    Camera.CFrame = Camera.CFrame:Lerp(Main,getgenv().Nova.Aimbot.Smoothness,Enum.EasingStyle[getgenv().Nova.Easing.Style],Enum.EasingDirection[getgenv().Nova.Easing.Direction])
    end
end
end)

RunService.Heartbeat:Connect(function()
    if getgenv().Nova.Aimbot.Enabled == true and Plr and Plr.Character ~= nil then
    if getgenv().Nova.Checks.Aimbot.Knocked then
    if Plr.Character.BodyEffects["K.O"].Value then Plr = nil 
    end
    end
    end
end)


local grmt = getrawmetatable(game)
local backupindex = grmt.__index
setreadonly(grmt, false)

grmt.__index = newcclosure(function(self, v)
if (getgenv().Nova.Silent.Enabled and Mouse and tostring(v) == "Hit") then
Plr2 = ClosestPlrFromMouse()
if Plr2 then
    local endpoint = game.Players[tostring(Plr2)].Character[getgenv().Nova.Silent.HitPart].CFrame + (
    game.Players[tostring(Plr2)].Character[getgenv().Nova.Silent.HitPart].Velocity *getgenv().Nova.Silent.Prediction
    )
    return (tostring(v) == "Hit" and endpoint)
end
end
return backupindex(self, v)
end)

RunService.RenderStepped:Connect(function()
if getgenv().Nova.Aimbot.Smoothing and getgenv().Nova.Aimbot.Enabled  == true then
    local Main = CFrame.new(workspace.CurrentCamera.CFrame.p, Plr.Character[getgenv().Nova.Aimbot.HitPart].Position + Plr.Character[getgenv().Nova.Aimbot.HitPart].Velocity*getgenv().Nova.Aimbot.Prediction)
     workspace.CurrentCamera.CFrame = workspace.CurrentCamera.CFrame:Lerp(Main,getgenv().Nova.Aimbot.Smoothness,Enum.EasingStyle[getgenv().Nova.Easing.Style],Enum.EasingDirection[getgenv().Nova.Easing.Direction])
elseif getgenv().Nova.Aimbot.Smoothing == false and  getgenv().Nova.Aimbot.Enabled == true then
    workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, Plr.Character[getgenv().Nova.Aimbot.HitPart].Position + Plr.Character[getgenv().Nova.Aimbot.HitPart].Velocity*getgenv().Nova.Aimbot.Prediction)
    end
end)


Client.Chatted:Connect(function(message)
if getgenv().Nova.Cmds.Enabled then
    local args = string.split(message, " ")
    if args[1] == getgenv().Nova.Cmds.FOV_Size and getgenv().Nova.Cmds.FOV_Type == "Silent" and args[2] ~= nil then
    getgenv().Nova.FOV.Silent.Size = tonumber(args[2])
    elseif args[1] == getgenv().Nova.Cmds.FOV_Size and getgenv().Nova.Cmds.FOV_Type == "Aimbot" and args[2] ~= nil then
    getgenv().Nova.FOV.Aimbot.Size = tonumber(args[2])
    end

if getgenv().Nova.Cmds.Enabled then
    local args = string.split(message, " ")
    if args[1] == getgenv().Nova.Cmds.Pred_Value and getgenv().Nova.cmds.Predict_Type == "Silent" and args[2] ~= nil then
    getgenv().Nova.Silent.Prediction = tonumber(args[2])
    elseif args[1] == getgenv().Nova.Cmds.Pred_Value and getgenv().Nova.cmds.Predict_Type == "Aimbot" and args[2] ~= nil then
    getgenv().Nova.Aimbot.Prediction = tonumber(args[2])
    end
end
end
end)

Mouse.KeyDown:Connect(
function(Key)
if getgenv().Nova.Silent.UseKeyBind then
if (Key ==  getgenv().Nova.Silent.Key:lower()) then
    if getgenv().Nova.Silent.Enabled == true then
    getgenv().Nova.Silent.Enabled = false
   SendNotification("Silent Disabled.")
    else
    getgenv().Nova.Silent.Enabled = true
    SendNotification("Silent Enabled.")
    end
end
end
end
)

-- grabbed checks

if getgenv().Nova.Checks.Silent.Grabbed == true and player and player.Character then
    if player.Character:FindFirstChild("GRABBING_CONSTRAINT") then
    return true
    end
end

if getgenv().Nova.Checks.Silent.Crew == true then
while true do
local newPlayer = game.Players.PlayerAdded:wait()
if player:IsInGroup(newPlayer.Group) then
table.insert(Ignored.Players, newPlayer)
end
end
end


function TargetChecks(Target)
if getgenv().Nova.Checks.Silent.Knocked == true and Target.Character then
    return Target.Character.BodyEffects["K.O"].Value and true or false
end
return false
end


function Anti_Curve()
local character = game.Players.LocalPlayer.Character
if getgenv().Nova.Checks.Silent.Anti_Curve and character and character.PrimaryPart then
    local characterCf = character.PrimaryPart.CFrame
    local target = self.Character.HumanoidRootPart
    local targetPos = target.Position
    local charPos = character.PrimaryPart.Position
    character:SetPrimaryPartCFrame(CFrame.lookAt(charPos, v3(targetPos.X, charPos.Y, targetPos.Z)))
    wait()
    character:SetPrimaryPartCFrame(characterCf)
end
end




if getgenv().Nova.Checks.Silent.Friend then
    if table.find(Script.Friends, Target.UserId) then
        return nil
    end
end


local function AntiGroundShots()
if self ~= nil and getgenv().Nova.AntiGroundShots.Enabled and self.Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall then
        local currentvelocity = self.Character.HumanoidRootPart.Velocity
        self.Character.HumanoidRootPart.Velocity = Vector3.new(currentvelocity.X, currentvelocity.Y / getgenv().Nova.AntiGroundShots.Delay, currentvelocity.Z)
end
end
while getgenv().Nova.AutoPrediction.Enabled == true do
local Ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
local pingNumber = string.split(Ping, " ")[1] -10
    if pingNumber < 10 then
    getgenv().Nova.Silent.Prediction = getgenv().Nova.AutoPrediction.Ping_10
    elseif pingNumber < 20 then
    getgenv().Nova.Silent.Prediction = getgenv().Nova.AutoPrediction.Ping_20
    elseif pingNumber < 30 then
    getgenv().Nova.Silent.Prediction = getgenv().Nova.AutoPrediction.Ping_30
    elseif pingNumber < 40 then
    getgenv().Nova.Silent.Prediction = getgenv().Nova.AutoPrediction.Ping_40
    elseif pingNumber < 50 then
    getgenv().Nova.Silent.Prediction = getgenv().Nova.AutoPrediction.Ping_50
    elseif pingNumber < 60 then
    getgenv().Nova.Silent.Prediction = getgenv().Nova.AutoPrediction.Ping_60
    elseif pingNumber < 70 then
    getgenv().Nova.Silent.Prediction = getgenv().Nova.AutoPrediction.Ping_70
    elseif pingNumber < 80 then
    getgenv().Nova.Silent.Prediction = getgenv().Nova.AutoPrediction.Ping_80
    elseif pingNumber < 90 then
    getgenv().Nova.Silent.Prediction = getgenv().Nova.AutoPrediction.Ping_90
    elseif pingNumber < 100 then
    getgenv().Nova.Silent.Prediction = getgenv().Nova.AutoPrediction.Ping_100
    elseif pingNumber < 110 then
    getgenv().Nova.Silent.Prediction = getgenv().Nova.AutoPrediction.Ping_110 + 0.02
    elseif pingNumber < 120 then
    getgenv().Nova.Silent.Prediction = getgenv().Nova.AutoPrediction.Ping_120 + 0.03
    elseif pingNumber < 130 then
    getgenv().Nova.Silent.Prediction = getgenv().Nova.AutoPrediction.Ping_130 + 0.04
    elseif pingNumber < 140 then
    getgenv().Nova.Silent.Prediction = getgenv().Nova.AutoPrediction.Ping_140 + 0.05
    elseif pingNumber < 150 then
    getgenv().Nova.Silent.Prediction = getgenv().Nova.AutoPrediction.Ping_150 
end
wait(getgenv().Nova.AutoPrediction.RefreshRate)
end

if getgenv().Nova.Options.Intro and getgenv().Nova.Options.Intro_Type == "Notification" then

elseif getgenv().Nova.Options.Intro and getgenv().Nova.Options.Intro_Type == "Funny" then
local intro = true

if intro then

local Sound = Instance.new("Sound")

Sound.SoundId = "http://www.roblox.com/asset/?id=13107447842"
Sound.Volume = 5
Sound.Parent = game.Workspace

Sound:play()

local Image = Drawing.new("Image")
local Screen = workspace.CurrentCamera.ViewportSize

Image.Data = game:HttpGet("https://i.imgur.com/ZCy6Pcd.png")
Image.Visible = true
Image.Transparency = 1
Image.Position = Vector2.new(0,0)
Image.Size = Vector2.new(Screen.X,Screen.Y)

task.wait(1.2)

for i = 1, 100 do
Image.Transparency = 1 - (i / 110)
task.wait(0.01)
end

Image:Remove()

end
end

end)



local Section1 = Tab1:NewSection("Visual Mods")

local Button1 = Tab1:NewButton("Rotate Crosshair", function()
    -- // Hello Everything Is Made By Haalfi (Real) And yes There Will Be A Mobile Version 

    getgenv().LuaHVH = {
       Aimlock = {
       Key = Enum.KeyCode.Q,
       Target = false,
       ChatMode = false,
       Notifications = false,
       AirshotFunccc = false,
       Partz = "UpperTorso",
       Ben = false
   },
   Global = {
       Prediction = 0.133,
       TargetOffset = 0.06, -- // Azure Ur Offset Is Trash Just Kys
       AdvancedPrediction = false
   },
   BoxVisual = {
   Visible = false,
   Rainbow = false,
   Color = Color3.fromRGB(255,255,255),
   Rainbow = false, -- // LGBT Mode
   Shape = "Box", -- // Options: "Ball", "Box", "Cylinder"
   Size = "Medium",-- // Options: "Small", "Medium", "Large"
   Material = "ForceField" -- // Options: "ForceField", "SmoothPlastic", "Neon" or  "Glass"
   },
   TracerVisual = {
   Visible = false,
   Color = Color3.fromRGB(255,0,0),
   Thickness = 1,
   Transparency = 1
   },
   FovVisual = {
   Visible = false,
   Color = Color3.fromRGB(153, 50, 204),
   Filled = false,
   Radius = 500,
   Transparency = 0.7,
   NumSides = 0,
   Thickness = 0
   },
   Rage = {
       ViewAt = false,
       TPToTarget = false,
       Orbit = false,
       Height = 100,
       Speed = 50,
       Distance = 10
   },
   Resolver = {  -- // Go Kys
       AntiAimViewer = false, -- // Spoofs Your Mouse Position
       Resolver = false, -- // Best Method : Delta Time
       Method = "No Prediction" -- // No Prediction, DeltaTime, MoveDirection
   },
   Hitsound = {
       Enabled = false,
       ID = "rbxassetid://1053296915",
       Volume  = 1
   },
   HitChams = {
       Enabled = false,
       Color = Color3.fromRGB(0,0,0),
       WaitTime = 1,
       Material = "ForceField",
       Transparency = 0
   },
   CustomAutoPrediction = { -- // Custom Auto Prediction Gay, Current Sets Is Not Recommended
       Enabled = false,
       Speed = 0.2, -- // how fast the auto pred changes
       P40 = 0.1256,
       P50 = 0.13575,
       P60 = 0.1229,
       P70 = 0.131,
       P80 = 0.134,
       P90 = 0.136,
       P105 = 0.138,
       P110 = 0.146,
       P125 = 0.155,
       P130 = 0.151,
       P140 = 0.153,
       P150 = 0.165566,
   },
   DistanceBased = {
       Enabled = false,
       close = 30, -- // close distance / target distance studs
       closepred = 0.133,
       mid = 60, -- // mid studs distance
       midpred = 0.1455,
       far = math.huge, -- // keep this as math.huge
       farpred = 0.1533
   },
   Crosshair = { -- // this is so useless wtf
       Visible = true,
       Color = Color3.fromRGB(255,255,255),
       Rainbow = false,
       Spin = true,
       SpinPower = 1.5
   },
   Bullet_Tracer = {
       Enabled = false,
       Color = Color3.fromRGB(153, 50, 204),
       BulletWidth = 3 -- // 0.4 is good
   },
   }

   local LuaHVH = getgenv().LuaHVH

   local accomidationfactor = LuaHVH.Global.Prediction

   local HeartTable = {}

   local function BindToHeartbeat(name, num, func)
       if HeartTable[name] == nil then
           HeartTable[name] = game:GetService("RunService").Heartbeat:Connect(func)
       end
   end

   local function UnbindFromHeartbeat(name)
       if HeartTable[name] then
           HeartTable[name]:Disconnect()
           HeartTable[name] = nil
       end
   end


   function hitsound()
       local Hit = Instance.new("Sound")
       Hit.Parent = game.SoundService
       Hit.SoundId = LuaHVH.Hitsound.ID
       Hit.Volume = LuaHVH.Hitsound.Volume
       Hit.Looped = false
       Hit:Play()
       delay(10,function()
           Hit:Remove()
       end)
   end

       _G.Types = {
           Ball = Enum.PartType.Ball,
           Block = Enum.PartType.Block, 
           Cylinder = Enum.PartType.Cylinder
       }
       
                   
           local Tracer = Instance.new("Part", game.Workspace)
       Tracer.Name = "0Comp.lua"	
       Tracer.Anchored = true
       Tracer.CanCollide = false
       Tracer.Transparency = 0.3
       Tracer.Parent = game.Workspace	
       Tracer.Color = LuaHVH.BoxVisual.Color
       
       if LuaHVH.BoxVisual.Shape == "Ball" then
       Tracer.Shape = _G.Types.Ball
   elseif LuaHVH.BoxVisual.Shape == "Box" then
       Tracer.Shape = _G.Types.Block
   elseif LuaHVH.BoxVisual.Shape == "Cylinder" then
       Tracer.Shape = _G.Types.Cylinder
   end


   if LuaHVH.BoxVisual.Size == "Small" then
       Tracer.Size = Vector3.new(4, 4, 4)
   elseif LuaHVH.BoxVisual.Size == "Medium" then
       Tracer.Size = Vector3.new(7, 7, 7)
   elseif LuaHVH.BoxVisual.Size == "Large" then
       Tracer.Size = Vector3.new(12, 12, 12)
   end


       --
       local plr = game.Players.LocalPlayer
   local mouse = plr:GetMouse()
   local Runserv = game:GetService("RunService")
   local Line = Drawing.new("Line")
   local Inset = game:GetService("GuiService"):GetGuiInset().Y

   circle = Drawing.new("Circle")
   circle.Color = LuaHVH.FovVisual.Color
   circle.NumSides = LuaHVH.FovVisual.NumSides
   circle.Radius = LuaHVH.FovVisual.Radius
   circle.Thickness = LuaHVH.FovVisual.Thickness
   circle.Transparency = LuaHVH.FovVisual.Transparency
   circle.Visible = LuaHVH.FovVisual.Visible
   circle.Filled = LuaHVH.FovVisual.Filled

   Runserv.RenderStepped:Connect(function()
       circle.Position = Vector2.new(mouse.X,mouse.Y+35)
       if LuaHVH.Aimlock.AirshotFunccc == true then
               if Plr ~= nil then else return; end
               if Plr.Character.Humanoid.Jump == true and Plr.Character.Humanoid.FloorMaterial == Enum.Material.Air then
                   LuaHVH.Aimlock.Partz = "RightFoot"
               else
                   Plr.Character:WaitForChild("Humanoid").StateChanged:Connect(function(old,new)
                       if new == Enum.HumanoidStateType.Freefall then
                       LuaHVH.Aimlock.Partz = "RightFoot"
                       else
                           LuaHVH.Aimlock.Partz = "HumanoidRootPart"
                       end
                   end)
               end
   end
   end)
       
           local guimain = Instance.new("Folder", game.CoreGui)
           local CC = game:GetService"Workspace".CurrentCamera
       local LocalMouse = game.Players.LocalPlayer:GetMouse()
           local Locking = false
       
           
       --
       
           local UserInputService = game:GetService("UserInputService")

       UserInputService.InputBegan:Connect(function(keygo,ok)
           if (not ok) then
           if (keygo.KeyCode == LuaHVH.Aimlock.Key) then
               if LuaHVH.Aimlock.Target == true then
               Locking = not Locking
               
               if Locking then
               Plr =  getClosestPlayerToCursor()
                   if LuaHVH.Aimlock.ChatMode then
           local A_1 = "Target: "..tostring(Plr.Character.Humanoid.DisplayName) local A_2 = "All" local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest Event:FireServer(A_1, A_2) 
               end	
           
           if LuaHVH.Hitsound.Enabled then
           local LastHealthPos = Plr.Character.Humanoid.Health
                           Plr.Character.Humanoid.HealthChanged:Connect(function(hp)
                               local dif = hp - LastHealthPos
               
                               if dif < 0 and Locking then
                                   hitsound()
                               end  
                               LastHealthPos = hp
                           end)
                       end
           
           if LuaHVH.Rage.ViewAt == true then
           BindToHeartbeat("View At", 1, function()
           game.Workspace.CurrentCamera.CameraSubject = Plr.Character
           end)
           end
           
           if LuaHVH.Rage.TPToTarget == true then
                   game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = Plr.Character.HumanoidRootPart.CFrame
               end
               
                       if LuaHVH.Rage.Orbit then
           BindToHeartbeat("orbit", 1, function()
           game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Plr.Character.HumanoidRootPart.Position + Vector3.new(math.cos(tick()*LuaHVH.Rage.Speed)*LuaHVH.Rage.Distance,LuaHVH.Rage.Height,math.sin(tick()*LuaHVH.Rage.Speed)*LuaHVH.Rage.Distance))
           end)
           end
           
           local oldHealt = Plr.Character.Humanoid.Health
                   
                   if LuaHVH.HitChams.Enabled == true then
                       
                       Plr.Character.Humanoid.HealthChanged:Connect(function(neHealth)

                           local Clone = Plr.Character:Clone()

                           if neHealth > oldHealt then 
                               Clone:Destroy()
                           end

                           if Plr.Character.Humanoid.Health < 0 then
                               Clone:Destroy()
                           end

                           if neHealth < oldHealt then 
                                   
                               
                                   -- Main Hit-Chams --

                               Plr.Character.Archivable = true
                               for _,Obj in next, Clone:GetDescendants() do
                                   if Obj.Name == "HumanoidRootPart" or Obj:IsA("Humanoid") or Obj:IsA("LocalScript") or Obj:IsA("Script") or Obj:IsA("Decal") then
                                       Obj:Destroy()
                                   elseif Obj:IsA("BasePart") or Obj:IsA("Meshpart") or Obj:IsA("Part") then
                                       Obj.CanCollide = false
                                       Obj.Anchored = true
                                       Obj.Material = LuaHVH.HitChams.Material
                                       Obj.Color = LuaHVH.HitChams.Color
                                       Obj.Transparency = LuaHVH.HitChams.Transparency
                                       Obj.Size = Obj.Size + Vector3.new(0.03, 0.03, 0.03)
                                   end
                                   
                                   -- Destroys All Part Of Chams -- 
                                   
                                   if Obj:IsA("Accessory") then
                                       Obj:Destroy()
                                   end
                                   if Obj:IsA("Shirt") then
                                       Obj:Destroy()
                                   end
                                   if Obj:IsA("Pants") then
                                       Obj:Destroy()
                                   end
                                   if Obj:IsA("Tool") then
                                       Obj:Destroy()
                                   end
                                   pcall(function()
                                       Obj.CanCollide = false
                                   end) 

                               end

                               -- Makes The Chams When Player Is Target --

                               Clone.Parent = game.Workspace
                               wait(LuaHVH.HitChams.WaitTime)
                               Clone:Destroy()
                           end
                           oldHealt = neHealth 
                       end)
                   end
                   
               if LuaHVH.Aimlock.Ben then
               local ben = Instance.new("Sound")
                           ben.Name = "yes"
                           ben.Volume = 0.2
                           ben.SoundId = "rbxassetid://8819783960"
                           ben.Parent = game:GetService("SoundService")
                           ben.Playing = true
                           delay(3,function()
                               ben:Destroy()
                           end)
                       end
                       
               if LuaHVH.Aimlock.Notifications then
                   game.StarterGui:SetCore("SendNotification", {
           Title = "0Comp.lua";
           Text = "Target: "..tostring(Plr.Character.Humanoid.DisplayName);
       
       })
       end
       elseif not Locking then
           if LuaHVH.Aimlock.ChatMode then
           local A_1 = "Unlocked!" local A_2 = "All" local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest Event:FireServer(A_1, A_2) 
               end	
           
           if LuaHVH.Rage.ViewAt == true then
           game.Workspace.CurrentCamera.CameraSubject = game:GetService("Players").LocalPlayer.Character
           end
           
           if LuaHVH.Rage.Orbit then
           UnbindFromHeartbeat("orbit")
           end
           
                   if LuaHVH.Rage.ViewAt then
           UnbindFromHeartbeat("View At")
           end
           
           if LuaHVH.Aimlock.Ben then
           local ben = Instance.new("Sound")
                           ben.Name = "no"
                           ben.Volume = 0.2
                           ben.SoundId = "rbxassetid://8819782435"
                           ben.Parent = game:GetService("SoundService")
                           ben.Playing = true
                           delay(3,function()
                               ben:Destroy()
                           end)
                       end
                       
                       if LuaHVH.HitChams.Enabled == true then
                       if Plr.Character.Humanoid.Health < 0 and Plr.Character.BodyEffects.KO.Value == true then
                           Clone:Destroy()
                       elseif Plr.Character.BodyEffects.Dead.Value == true then
                           Clone:Destroy()
                       end
                   end

           if LuaHVH.Aimlock.Notifications then
                           game.StarterGui:SetCore("SendNotification", {
                   Title = "0Comp.lua",
                   Text = "Unlocked",
                   Duration = 5
               })
           elseif LuaHVH.Aimlock.Target == false then
                           game.StarterGui:SetCore("SendNotification", {
                   Title = "",
                   Text = "Target left or died.",
                   Duration = 5
       
                   })
               
               end
                   
   
   end     end   
   end
   end
   end)
       
       function getClosestPlayerToCursor()
           local closestPlayer
           local shortestDistance = circle.Radius

           for i, v in pairs(game.Players:GetPlayers()) do
               if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("LowerTorso") then
                   local pos = CC:WorldToViewportPoint(v.Character.PrimaryPart.Position)
                   local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(LocalMouse.X, LocalMouse.Y)).magnitude
                   if magnitude < shortestDistance then
                       closestPlayer = v
                       shortestDistance = magnitude
                   end
               end
           end
           return closestPlayer
       end
   --

   if LuaHVH.BoxVisual.Visible then
       game:GetService"RunService".Stepped:connect(function()
           if Locking and Plr.Character and Plr.Character:FindFirstChild("LowerTorso") then
               Tracer.CFrame = CFrame.new(Plr.Character.LowerTorso.Position+(Plr.Character.LowerTorso.Velocity*accomidationfactor))
           else
               Tracer.CFrame = CFrame.new(0, 9999, 0)
           end
       end)
   end

   Runserv.Heartbeat:connect(function()
   if Locking and LuaHVH.DistanceBased.Enabled then
           local vvv = (Plr.Character.PrimaryPart.Position-game.Players.LocalPlayer.Character.PrimaryPart.Position).Magnitude
               
               if vvv > LuaHVH.DistanceBased.close then
               accomidationfactor = LuaHVH.DistanceBased.farpred
           elseif vvv > LuaHVH.DistanceBased.mid then
               accomidationfactor = LuaHVH.DistanceBased.midpred
           elseif vvv <= LuaHVH.DistanceBased.close then
               accomidationfactor = LuaHVH.DistanceBased.closepred
           else
               accomidationfactor = accomidationfactor
           end
       end
       
   if Locking and LuaHVH.TracerVisual.Visible then
               local Vector, OnScreen = CC:worldToViewportPoint(Plr.Character[LuaHVH.Aimlock.Partz].Position + (Plr.Character[LuaHVH.Aimlock.Partz].Velocity * accomidationfactor))
               if OnScreen then
               Line.Visible = true
   Line.Thickness = LuaHVH.TracerVisual.Thickness
   Line.Transparency = LuaHVH.TracerVisual.Transparency
   Line.Color = LuaHVH.TracerVisual.Color
               Line.From = Vector2.new(mouse.X, mouse.Y + Inset)
               Line.To = Vector2.new(Vector.X, Vector.Y)
           end
           elseif not Locking then
               Line.Visible = false
           end
           
           if LuaHVH.Global.AdvancedPrediction == true then 
           local PingStats = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
           local Value = tostring(PingStats)
           local PingValue = Value:split(" ")
           local PingNumber = tonumber(PingValue[1])

           if PingNumber < 130 then
               accomidationfactor = PingNumber / 1000 + 0.037
           else
               accomidationfactor = PingNumber / 1000 + 0.033
           end
       end
       
           if LuaHVH.Crosshair.Visible == true then
           game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Visible = true
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.Visible = true
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.Visible = true
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.Visible = true
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.Visible = true
       
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.BackgroundColor3 = LuaHVH.Crosshair.Color
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.BackgroundColor3 = LuaHVH.Crosshair.Color
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.BackgroundColor3 = LuaHVH.Crosshair.Color
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.BackgroundColor3 = LuaHVH.Crosshair.Color
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.BackgroundColor3 = LuaHVH.Crosshair.Color
       else
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Visible = false
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.Visible = false
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.Visible = false
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.Visible = false
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.Visible = false
       
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.BackgroundColor3 = LuaHVH.Crosshair.Color
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.BackgroundColor3 = Haalfo.Crosshair.Color
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.BackgroundColor3 = LuaHVH.Crosshair.Color
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.BackgroundColor3 = LuaHVH.Crosshair.Color
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.BackgroundColor3 = LuaHVH.Crosshair.Color
       end
       
       if LuaHVH.Crosshair.Spin then
   game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Rotation = game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Rotation + LuaHVH.Crosshair.SpinPower
   end

   if LuaHVH.Crosshair.Rainbow then
   game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.BackgroundColor3 = Color3.fromHSV(tick() % 6 / 6, 1, 1)
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.BackgroundColor3 = Color3.fromHSV(tick() % 6 / 6, 1, 1)
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.BackgroundColor3 = Color3.fromHSV(tick() % 6 / 6, 1, 1)
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.BackgroundColor3 = Color3.fromHSV(tick() % 6 / 6, 1, 1)
       game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.BackgroundColor3 = Color3.fromHSV(tick() % 6 / 6, 1, 1)
       end
       
           if LuaHVH.BoxVisual.Rainbow == true then
       Tracer.Color = Color3.fromHSV(tick() % 6 / 6, 1, 1)
   end
   
       if LuaHVH.Resolver.AntiAimViewer == true then
   for i, v in pairs(game.Players:GetPlayers()) do
                   if v ~= Client and v.Character and v.Character:FindFirstChild("Head") and  v.Character:FindFirstChild("HumanoidRootPart")  then
                       local c = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Character.Part.Position)
                       local d = (Vector2.new(LocalMouse.X, LocalMouse.Y) - Vector2.new(c.X, c.Y)).Magnitude
                       if a > d then
                           b = v
                           a = d
                       end
                   end
               end
           return b
           end
           
   if LuaHVH.Bullet_Tracer.Enabled then
   local ColourSequence = ColorSequence.new({
       ColorSequenceKeypoint.new(0,  LuaHVH.Bullet_Tracer.Color),
       ColorSequenceKeypoint.new(1,  LuaHVH.Bullet_Tracer.Color),
   })

       for _,v in pairs(game:GetService("Workspace").Ignored:GetDescendants()) do 
           if v.Name == "BULLET_RAYS" then 
               if 100 > (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude then 
               v.GunBeam.Texture = "http://www.roblox.com/asset/?id=9150561638"
               v.GunBeam.Width0 = LuaHVH.Bullet_Tracer.BulletWidth
               v.GunBeam.Width1 = LuaHVH.Bullet_Tracer.BulletWidth
               v.GunBeam.Color = ColourSequence
           end 
           end 
   end 
   end 
           end)
           
   function calculateVelocity(initialPos, finalPos, timeInterval)
       local displacement = finalPos - initialPos
       local velocity = displacement / timeInterval
       return velocity
       end

       game:GetService('RunService').RenderStepped:connect(function(deltaTime)
       if LuaHVH.Resolver.Resolver == true and LuaHVH.Resolver.Method == "DeltaTime" and Locking then 
           local character = Plr.Character.HumanoidRootPart
           local lastPosition = character.Position
               task.wait()
           local currentPosition = character.Position
           local velocity = calculateVelocity(lastPosition, currentPosition, deltaTime)
           character.AssemblyLinearVelocity = velocity
           character.Velocity = velocity
               lastPosition = currentPosition
           end
       end)
       
       --
       local rawmetatable = getrawmetatable(game)
       local old = rawmetatable.__namecall
       setreadonly(rawmetatable, false)
       rawmetatable.__namecall = newcclosure(function(...)
           local args = {...}
           if Locking and getnamecallmethod() == "FireServer" and args[2] == "UpdateMousePos" then
           if LuaHVH.Resolver.Resolver == true and LuaHVH.Resolver.Method == "No Prediction" then
           args[3] = Plr.Character[LuaHVH.Aimlock.Partz].Position
           elseif LuaHVH.Resolver.Method == "MoveDirection" then
           args[3] = Plr.Character[LuaHVH.Aimlock.Partz].Position+Vector3.new(0, LuaHVH.Global.TargetOffset, 0)+(Plr.Character.Humanoid.MoveDirection * accomidationfactor)
           else
               args[3] = Plr.Character[LuaHVH.Aimlock.Partz].Position+Vector3.new(0, LuaHVH.Global.TargetOffset, 0)+(Plr.Character[LuaHVH.Aimlock.Partz].Velocity*accomidationfactor)
               end
               return old(unpack(args))
           end
           return old(...)
       end)
   ---

   local pingvalue = nil;
   local split = nil;
   local ping = nil; 

       while wait() do
       if LuaHVH.CustomAutoPrediction.Enabled == true then
           local pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
           local split = string.split(pingvalue,'(')
           local ping = tonumber(split[1])
           if ping < 150 then
           accomidationfactor = LuaHVH.AutoPrediction.P150
           elseif ping < 140 then
           accomidationfactor = LuaHVH.AutoPrediction.P140
           elseif ping < 130 then
               accomidationfactor = LuaHVH.AutoPrediction.P130
           elseif ping < 125 then
               accomidationfactor = LuaHVH.AutoPrediction.P125
           elseif ping < 110 then
               accomidationfactor = LuaHVH.AutoPrediction.P110
           elseif ping < 105 then
               accomidationfactor = LuaHVH.AutoPrediction.P105
           elseif ping < 90 then
               accomidationfactor = LuaHVH.AutoPrediction.P90
           elseif ping < 80 then
               accomidationfactor = LuaHVH.AutoPrediction.P80
           elseif ping < 70 then
               accomidationfactor = LuaHVH.AutoPrediction.P70
           elseif ping < 60 then
               accomidationfactor = LuaHVH.AutoPrediction.P60
           elseif ping < 50 then
               accomidationfactor = LuaHVH.AutoPrediction.P50
           elseif ping < 40 then
               accomidationfactor = LuaHVH.AutoPrediction.P40
           end
           wait(LuaHVH.AutoPrediction.Speed)
       end
       end

   end)


   local Button1 = Tab1:NewButton("Bullet Mod", function()
       -- // Hello Everything Is Made By Haalfi (Real) And yes There Will Be A Mobile Version 

       getgenv().LuaHVH = {
        Aimlock = {
        Key = Enum.KeyCode.Q,
        Target = false,
        ChatMode = false,
        Notifications = false,
        AirshotFunccc = false,
        Partz = "UpperTorso",
        Ben = false
    },
    Global = {
        Prediction = 0.133,
        TargetOffset = 0.06, -- // Azure Ur Offset Is Trash Just Kys
        AdvancedPrediction = false
    },
    BoxVisual = {
    Visible = false,
    Rainbow = false,
    Color = Color3.fromRGB(255,255,255),
    Rainbow = false, -- // LGBT Mode
    Shape = "Box", -- // Options: "Ball", "Box", "Cylinder"
    Size = "Medium",-- // Options: "Small", "Medium", "Large"
    Material = "ForceField" -- // Options: "ForceField", "SmoothPlastic", "Neon" or  "Glass"
    },
    TracerVisual = {
    Visible = false,
    Color = Color3.fromRGB(255,0,0),
    Thickness = 1,
    Transparency = 1
    },
    FovVisual = {
    Visible = false,
    Color = Color3.fromRGB(153, 50, 204),
    Filled = false,
    Radius = 500,
    Transparency = 0.7,
    NumSides = 0,
    Thickness = 0
    },
    Rage = {
        ViewAt = false,
        TPToTarget = false,
        Orbit = false,
        Height = 100,
        Speed = 50,
        Distance = 10
    },
    Resolver = {  -- // Go Kys
        AntiAimViewer = false, -- // Spoofs Your Mouse Position
        Resolver = false, -- // Best Method : Delta Time
        Method = "No Prediction" -- // No Prediction, DeltaTime, MoveDirection
    },
    Hitsound = {
        Enabled = false,
        ID = "rbxassetid://1053296915",
        Volume  = 1
    },
    HitChams = {
        Enabled = false,
        Color = Color3.fromRGB(0,0,0),
        WaitTime = 1,
        Material = "ForceField",
        Transparency = 0
    },
    CustomAutoPrediction = { -- // Custom Auto Prediction Gay, Current Sets Is Not Recommended
        Enabled = false,
        Speed = 0.2, -- // how fast the auto pred changes
        P40 = 0.1256,
        P50 = 0.13575,
        P60 = 0.1229,
        P70 = 0.131,
        P80 = 0.134,
        P90 = 0.136,
        P105 = 0.138,
        P110 = 0.146,
        P125 = 0.155,
        P130 = 0.151,
        P140 = 0.153,
        P150 = 0.165566,
    },
    DistanceBased = {
        Enabled = false,
        close = 30, -- // close distance / target distance studs
        closepred = 0.133,
        mid = 60, -- // mid studs distance
        midpred = 0.1455,
        far = math.huge, -- // keep this as math.huge
        farpred = 0.1533
    },
    Crosshair = { -- // this is so useless wtf
        Visible = true,
        Color = Color3.fromRGB(255,255,255),
        Rainbow = false,
        Spin = false,
        SpinPower = 2
    },
    Bullet_Tracer = {
        Enabled = true,
        Color = Color3.fromRGB(153, 50, 204),
        BulletWidth = 3 -- // 0.4 is good
    },
    }
 
    local LuaHVH = getgenv().LuaHVH
 
    local accomidationfactor = LuaHVH.Global.Prediction
 
    local HeartTable = {}
 
    local function BindToHeartbeat(name, num, func)
        if HeartTable[name] == nil then
            HeartTable[name] = game:GetService("RunService").Heartbeat:Connect(func)
        end
    end
 
    local function UnbindFromHeartbeat(name)
        if HeartTable[name] then
            HeartTable[name]:Disconnect()
            HeartTable[name] = nil
        end
    end
 
 
    function hitsound()
        local Hit = Instance.new("Sound")
        Hit.Parent = game.SoundService
        Hit.SoundId = LuaHVH.Hitsound.ID
        Hit.Volume = LuaHVH.Hitsound.Volume
        Hit.Looped = false
        Hit:Play()
        delay(10,function()
            Hit:Remove()
        end)
    end
 
        _G.Types = {
            Ball = Enum.PartType.Ball,
            Block = Enum.PartType.Block, 
            Cylinder = Enum.PartType.Cylinder
        }
        
                    
            local Tracer = Instance.new("Part", game.Workspace)
        Tracer.Name = "0Comp.lua"	
        Tracer.Anchored = true
        Tracer.CanCollide = false
        Tracer.Transparency = 0.3
        Tracer.Parent = game.Workspace	
        Tracer.Color = LuaHVH.BoxVisual.Color
        
        if LuaHVH.BoxVisual.Shape == "Ball" then
        Tracer.Shape = _G.Types.Ball
    elseif LuaHVH.BoxVisual.Shape == "Box" then
        Tracer.Shape = _G.Types.Block
    elseif LuaHVH.BoxVisual.Shape == "Cylinder" then
        Tracer.Shape = _G.Types.Cylinder
    end
 
 
    if LuaHVH.BoxVisual.Size == "Small" then
        Tracer.Size = Vector3.new(4, 4, 4)
    elseif LuaHVH.BoxVisual.Size == "Medium" then
        Tracer.Size = Vector3.new(7, 7, 7)
    elseif LuaHVH.BoxVisual.Size == "Large" then
        Tracer.Size = Vector3.new(12, 12, 12)
    end
 
 
        --
        local plr = game.Players.LocalPlayer
    local mouse = plr:GetMouse()
    local Runserv = game:GetService("RunService")
    local Line = Drawing.new("Line")
    local Inset = game:GetService("GuiService"):GetGuiInset().Y
 
    circle = Drawing.new("Circle")
    circle.Color = LuaHVH.FovVisual.Color
    circle.NumSides = LuaHVH.FovVisual.NumSides
    circle.Radius = LuaHVH.FovVisual.Radius
    circle.Thickness = LuaHVH.FovVisual.Thickness
    circle.Transparency = LuaHVH.FovVisual.Transparency
    circle.Visible = LuaHVH.FovVisual.Visible
    circle.Filled = LuaHVH.FovVisual.Filled
 
    Runserv.RenderStepped:Connect(function()
        circle.Position = Vector2.new(mouse.X,mouse.Y+35)
        if LuaHVH.Aimlock.AirshotFunccc == true then
                if Plr ~= nil then else return; end
                if Plr.Character.Humanoid.Jump == true and Plr.Character.Humanoid.FloorMaterial == Enum.Material.Air then
                    LuaHVH.Aimlock.Partz = "RightFoot"
                else
                    Plr.Character:WaitForChild("Humanoid").StateChanged:Connect(function(old,new)
                        if new == Enum.HumanoidStateType.Freefall then
                        LuaHVH.Aimlock.Partz = "RightFoot"
                        else
                            LuaHVH.Aimlock.Partz = "HumanoidRootPart"
                        end
                    end)
                end
    end
    end)
        
            local guimain = Instance.new("Folder", game.CoreGui)
            local CC = game:GetService"Workspace".CurrentCamera
        local LocalMouse = game.Players.LocalPlayer:GetMouse()
            local Locking = false
        
            
        --
        
            local UserInputService = game:GetService("UserInputService")
 
        UserInputService.InputBegan:Connect(function(keygo,ok)
            if (not ok) then
            if (keygo.KeyCode == LuaHVH.Aimlock.Key) then
                if LuaHVH.Aimlock.Target == true then
                Locking = not Locking
                
                if Locking then
                Plr =  getClosestPlayerToCursor()
                    if LuaHVH.Aimlock.ChatMode then
            local A_1 = "Target: "..tostring(Plr.Character.Humanoid.DisplayName) local A_2 = "All" local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest Event:FireServer(A_1, A_2) 
                end	
            
            if LuaHVH.Hitsound.Enabled then
            local LastHealthPos = Plr.Character.Humanoid.Health
                            Plr.Character.Humanoid.HealthChanged:Connect(function(hp)
                                local dif = hp - LastHealthPos
                
                                if dif < 0 and Locking then
                                    hitsound()
                                end  
                                LastHealthPos = hp
                            end)
                        end
            
            if LuaHVH.Rage.ViewAt == true then
            BindToHeartbeat("View At", 1, function()
            game.Workspace.CurrentCamera.CameraSubject = Plr.Character
            end)
            end
            
            if LuaHVH.Rage.TPToTarget == true then
                    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = Plr.Character.HumanoidRootPart.CFrame
                end
                
                        if LuaHVH.Rage.Orbit then
            BindToHeartbeat("orbit", 1, function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Plr.Character.HumanoidRootPart.Position + Vector3.new(math.cos(tick()*LuaHVH.Rage.Speed)*LuaHVH.Rage.Distance,LuaHVH.Rage.Height,math.sin(tick()*LuaHVH.Rage.Speed)*LuaHVH.Rage.Distance))
            end)
            end
            
            local oldHealt = Plr.Character.Humanoid.Health
                    
                    if LuaHVH.HitChams.Enabled == true then
                        
                        Plr.Character.Humanoid.HealthChanged:Connect(function(neHealth)
 
                            local Clone = Plr.Character:Clone()
 
                            if neHealth > oldHealt then 
                                Clone:Destroy()
                            end
 
                            if Plr.Character.Humanoid.Health < 0 then
                                Clone:Destroy()
                            end
 
                            if neHealth < oldHealt then 
                                    
                                
                                    -- Main Hit-Chams --
 
                                Plr.Character.Archivable = true
                                for _,Obj in next, Clone:GetDescendants() do
                                    if Obj.Name == "HumanoidRootPart" or Obj:IsA("Humanoid") or Obj:IsA("LocalScript") or Obj:IsA("Script") or Obj:IsA("Decal") then
                                        Obj:Destroy()
                                    elseif Obj:IsA("BasePart") or Obj:IsA("Meshpart") or Obj:IsA("Part") then
                                        Obj.CanCollide = false
                                        Obj.Anchored = true
                                        Obj.Material = LuaHVH.HitChams.Material
                                        Obj.Color = LuaHVH.HitChams.Color
                                        Obj.Transparency = LuaHVH.HitChams.Transparency
                                        Obj.Size = Obj.Size + Vector3.new(0.03, 0.03, 0.03)
                                    end
                                    
                                    -- Destroys All Part Of Chams -- 
                                    
                                    if Obj:IsA("Accessory") then
                                        Obj:Destroy()
                                    end
                                    if Obj:IsA("Shirt") then
                                        Obj:Destroy()
                                    end
                                    if Obj:IsA("Pants") then
                                        Obj:Destroy()
                                    end
                                    if Obj:IsA("Tool") then
                                        Obj:Destroy()
                                    end
                                    pcall(function()
                                        Obj.CanCollide = false
                                    end) 
 
                                end
 
                                -- Makes The Chams When Player Is Target --
 
                                Clone.Parent = game.Workspace
                                wait(LuaHVH.HitChams.WaitTime)
                                Clone:Destroy()
                            end
                            oldHealt = neHealth 
                        end)
                    end
                    
                if LuaHVH.Aimlock.Ben then
                local ben = Instance.new("Sound")
                            ben.Name = "yes"
                            ben.Volume = 0.2
                            ben.SoundId = "rbxassetid://8819783960"
                            ben.Parent = game:GetService("SoundService")
                            ben.Playing = true
                            delay(3,function()
                                ben:Destroy()
                            end)
                        end
                        
                if LuaHVH.Aimlock.Notifications then
                    game.StarterGui:SetCore("SendNotification", {
            Title = "0Comp.lua";
            Text = "Target: "..tostring(Plr.Character.Humanoid.DisplayName);
        
        })
        end
        elseif not Locking then
            if LuaHVH.Aimlock.ChatMode then
            local A_1 = "Unlocked!" local A_2 = "All" local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest Event:FireServer(A_1, A_2) 
                end	
            
            if LuaHVH.Rage.ViewAt == true then
            game.Workspace.CurrentCamera.CameraSubject = game:GetService("Players").LocalPlayer.Character
            end
            
            if LuaHVH.Rage.Orbit then
            UnbindFromHeartbeat("orbit")
            end
            
                    if LuaHVH.Rage.ViewAt then
            UnbindFromHeartbeat("View At")
            end
            
            if LuaHVH.Aimlock.Ben then
            local ben = Instance.new("Sound")
                            ben.Name = "no"
                            ben.Volume = 0.2
                            ben.SoundId = "rbxassetid://8819782435"
                            ben.Parent = game:GetService("SoundService")
                            ben.Playing = true
                            delay(3,function()
                                ben:Destroy()
                            end)
                        end
                        
                        if LuaHVH.HitChams.Enabled == true then
                        if Plr.Character.Humanoid.Health < 0 and Plr.Character.BodyEffects.KO.Value == true then
                            Clone:Destroy()
                        elseif Plr.Character.BodyEffects.Dead.Value == true then
                            Clone:Destroy()
                        end
                    end
 
            if LuaHVH.Aimlock.Notifications then
                            game.StarterGui:SetCore("SendNotification", {
                    Title = "0Comp.lua",
                    Text = "Unlocked",
                    Duration = 5
                })
            elseif LuaHVH.Aimlock.Target == false then
                            game.StarterGui:SetCore("SendNotification", {
                    Title = "",
                    Text = "Target left or died.",
                    Duration = 5
        
                    })
                
                end
                    
    
    end     end   
    end
    end
    end)
        
        function getClosestPlayerToCursor()
            local closestPlayer
            local shortestDistance = circle.Radius
 
            for i, v in pairs(game.Players:GetPlayers()) do
                if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("LowerTorso") then
                    local pos = CC:WorldToViewportPoint(v.Character.PrimaryPart.Position)
                    local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(LocalMouse.X, LocalMouse.Y)).magnitude
                    if magnitude < shortestDistance then
                        closestPlayer = v
                        shortestDistance = magnitude
                    end
                end
            end
            return closestPlayer
        end
    --
 
    if LuaHVH.BoxVisual.Visible then
        game:GetService"RunService".Stepped:connect(function()
            if Locking and Plr.Character and Plr.Character:FindFirstChild("LowerTorso") then
                Tracer.CFrame = CFrame.new(Plr.Character.LowerTorso.Position+(Plr.Character.LowerTorso.Velocity*accomidationfactor))
            else
                Tracer.CFrame = CFrame.new(0, 9999, 0)
            end
        end)
    end
 
    Runserv.Heartbeat:connect(function()
    if Locking and LuaHVH.DistanceBased.Enabled then
            local vvv = (Plr.Character.PrimaryPart.Position-game.Players.LocalPlayer.Character.PrimaryPart.Position).Magnitude
                
                if vvv > LuaHVH.DistanceBased.close then
                accomidationfactor = LuaHVH.DistanceBased.farpred
            elseif vvv > LuaHVH.DistanceBased.mid then
                accomidationfactor = LuaHVH.DistanceBased.midpred
            elseif vvv <= LuaHVH.DistanceBased.close then
                accomidationfactor = LuaHVH.DistanceBased.closepred
            else
                accomidationfactor = accomidationfactor
            end
        end
        
    if Locking and LuaHVH.TracerVisual.Visible then
                local Vector, OnScreen = CC:worldToViewportPoint(Plr.Character[LuaHVH.Aimlock.Partz].Position + (Plr.Character[LuaHVH.Aimlock.Partz].Velocity * accomidationfactor))
                if OnScreen then
                Line.Visible = true
    Line.Thickness = LuaHVH.TracerVisual.Thickness
    Line.Transparency = LuaHVH.TracerVisual.Transparency
    Line.Color = LuaHVH.TracerVisual.Color
                Line.From = Vector2.new(mouse.X, mouse.Y + Inset)
                Line.To = Vector2.new(Vector.X, Vector.Y)
            end
            elseif not Locking then
                Line.Visible = false
            end
            
            if LuaHVH.Global.AdvancedPrediction == true then 
            local PingStats = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
            local Value = tostring(PingStats)
            local PingValue = Value:split(" ")
            local PingNumber = tonumber(PingValue[1])
 
            if PingNumber < 130 then
                accomidationfactor = PingNumber / 1000 + 0.037
            else
                accomidationfactor = PingNumber / 1000 + 0.033
            end
        end
        
            if LuaHVH.Crosshair.Visible == true then
            game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Visible = true
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.Visible = true
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.Visible = true
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.Visible = true
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.Visible = true
        
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.BackgroundColor3 = LuaHVH.Crosshair.Color
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.BackgroundColor3 = LuaHVH.Crosshair.Color
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.BackgroundColor3 = LuaHVH.Crosshair.Color
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.BackgroundColor3 = LuaHVH.Crosshair.Color
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.BackgroundColor3 = LuaHVH.Crosshair.Color
        else
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Visible = false
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.Visible = false
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.Visible = false
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.Visible = false
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.Visible = false
        
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.BackgroundColor3 = LuaHVH.Crosshair.Color
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.BackgroundColor3 = Haalfo.Crosshair.Color
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.BackgroundColor3 = LuaHVH.Crosshair.Color
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.BackgroundColor3 = LuaHVH.Crosshair.Color
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.BackgroundColor3 = LuaHVH.Crosshair.Color
        end
        
        if LuaHVH.Crosshair.Spin then
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Rotation = game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Rotation + LuaHVH.Crosshair.SpinPower
    end
 
    if LuaHVH.Crosshair.Rainbow then
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.BackgroundColor3 = Color3.fromHSV(tick() % 6 / 6, 1, 1)
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.BackgroundColor3 = Color3.fromHSV(tick() % 6 / 6, 1, 1)
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.BackgroundColor3 = Color3.fromHSV(tick() % 6 / 6, 1, 1)
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.BackgroundColor3 = Color3.fromHSV(tick() % 6 / 6, 1, 1)
        game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.BackgroundColor3 = Color3.fromHSV(tick() % 6 / 6, 1, 1)
        end
        
            if LuaHVH.BoxVisual.Rainbow == true then
        Tracer.Color = Color3.fromHSV(tick() % 6 / 6, 1, 1)
    end
    
        if LuaHVH.Resolver.AntiAimViewer == true then
    for i, v in pairs(game.Players:GetPlayers()) do
                    if v ~= Client and v.Character and v.Character:FindFirstChild("Head") and  v.Character:FindFirstChild("HumanoidRootPart")  then
                        local c = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Character.Part.Position)
                        local d = (Vector2.new(LocalMouse.X, LocalMouse.Y) - Vector2.new(c.X, c.Y)).Magnitude
                        if a > d then
                            b = v
                            a = d
                        end
                    end
                end
            return b
            end
            
    if LuaHVH.Bullet_Tracer.Enabled then
    local ColourSequence = ColorSequence.new({
        ColorSequenceKeypoint.new(0,  LuaHVH.Bullet_Tracer.Color),
        ColorSequenceKeypoint.new(1,  LuaHVH.Bullet_Tracer.Color),
    })
 
        for _,v in pairs(game:GetService("Workspace").Ignored:GetDescendants()) do 
            if v.Name == "BULLET_RAYS" then 
                if 100 > (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude then 
                v.GunBeam.Texture = "http://www.roblox.com/asset/?id=9150561638"
                v.GunBeam.Width0 = LuaHVH.Bullet_Tracer.BulletWidth
                v.GunBeam.Width1 = LuaHVH.Bullet_Tracer.BulletWidth
                v.GunBeam.Color = ColourSequence
            end 
            end 
    end 
    end 
            end)
            
    function calculateVelocity(initialPos, finalPos, timeInterval)
        local displacement = finalPos - initialPos
        local velocity = displacement / timeInterval
        return velocity
        end
 
        game:GetService('RunService').RenderStepped:connect(function(deltaTime)
        if LuaHVH.Resolver.Resolver == true and LuaHVH.Resolver.Method == "DeltaTime" and Locking then 
            local character = Plr.Character.HumanoidRootPart
            local lastPosition = character.Position
                task.wait()
            local currentPosition = character.Position
            local velocity = calculateVelocity(lastPosition, currentPosition, deltaTime)
            character.AssemblyLinearVelocity = velocity
            character.Velocity = velocity
                lastPosition = currentPosition
            end
        end)
        
        --
        local rawmetatable = getrawmetatable(game)
        local old = rawmetatable.__namecall
        setreadonly(rawmetatable, false)
        rawmetatable.__namecall = newcclosure(function(...)
            local args = {...}
            if Locking and getnamecallmethod() == "FireServer" and args[2] == "UpdateMousePos" then
            if LuaHVH.Resolver.Resolver == true and LuaHVH.Resolver.Method == "No Prediction" then
            args[3] = Plr.Character[LuaHVH.Aimlock.Partz].Position
            elseif LuaHVH.Resolver.Method == "MoveDirection" then
            args[3] = Plr.Character[LuaHVH.Aimlock.Partz].Position+Vector3.new(0, LuaHVH.Global.TargetOffset, 0)+(Plr.Character.Humanoid.MoveDirection * accomidationfactor)
            else
                args[3] = Plr.Character[LuaHVH.Aimlock.Partz].Position+Vector3.new(0, LuaHVH.Global.TargetOffset, 0)+(Plr.Character[LuaHVH.Aimlock.Partz].Velocity*accomidationfactor)
                end
                return old(unpack(args))
            end
            return old(...)
        end)
    ---
 
    local pingvalue = nil;
    local split = nil;
    local ping = nil; 
 
        while wait() do
        if LuaHVH.CustomAutoPrediction.Enabled == true then
            local pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
            local split = string.split(pingvalue,'(')
            local ping = tonumber(split[1])
            if ping < 150 then
            accomidationfactor = LuaHVH.AutoPrediction.P150
            elseif ping < 140 then
            accomidationfactor = LuaHVH.AutoPrediction.P140
            elseif ping < 130 then
                accomidationfactor = LuaHVH.AutoPrediction.P130
            elseif ping < 125 then
                accomidationfactor = LuaHVH.AutoPrediction.P125
            elseif ping < 110 then
                accomidationfactor = LuaHVH.AutoPrediction.P110
            elseif ping < 105 then
                accomidationfactor = LuaHVH.AutoPrediction.P105
            elseif ping < 90 then
                accomidationfactor = LuaHVH.AutoPrediction.P90
            elseif ping < 80 then
                accomidationfactor = LuaHVH.AutoPrediction.P80
            elseif ping < 70 then
                accomidationfactor = LuaHVH.AutoPrediction.P70
            elseif ping < 60 then
                accomidationfactor = LuaHVH.AutoPrediction.P60
            elseif ping < 50 then
                accomidationfactor = LuaHVH.AutoPrediction.P50
            elseif ping < 40 then
                accomidationfactor = LuaHVH.AutoPrediction.P40
            end
            wait(LuaHVH.AutoPrediction.Speed)
        end
        end
 
    end)



local Section1 = Tab1:NewSection("Aimview")

local Button1 = Tab1:NewButton("Aimviewer | Z to toggle", function()
    print("one")
    game.StarterGui:SetCore("SendNotification", {
        Title = '0Comp.lua';
        Text = 'developed by | tier1josh';
        Icon = 'rbxassetid://14954527939';
        Duration = "2";
    })
   _G.enable = true
   _G.color = Color3.fromRGB(255,182,193)
   _G.toggle_keybind = ""
   _G.swith_nigga = 'z' 
   _G.method = "MousePos"
   
   
   
   
   
   local rs = game:GetService("RunService")
   local localPlayer = game.Players.LocalPlayer
   local mouse = localPlayer:GetMouse()
   local target;
   
   
   
   function getgun()
    for i,v in pairs(target.Character:GetChildren()) do
        if v and (v:FindFirstChild('Default') or v:FindFirstChild('Handle') )then
            return v
        end
    end
   end
   
   function sendnotifi(message)
   
   
    game.StarterGui:SetCore("SendNotification", {
        Title =  '0Comp.lua';
        Text = message;
        Icon = 'rbxassetid://14954527939';
        Duration = "2";
    })
   
    end
   
   
   function get_closet()
    local a = math.huge
    local b;
   
   
   
    for i, v in pairs(game.Players:GetPlayers()) do
        if v ~= localPlayer and v.Character and v.Character:FindFirstChild("Head") and  v.Character:FindFirstChild("HumanoidRootPart")  then
            local c = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Character.PrimaryPart.Position)
            local d = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(c.X, c.Y)).Magnitude
   
            if a > d then
                b = v
                a = d
            end
        end
    end
   
    return b
   end
   
   
   mouse.KeyDown:Connect(function(z)
    if z == _G.toggle_keybind then
        if _G.enable == false then
            _G.enable = true
            sendnotifi("Aim-Viewer Enabled")
        elseif _G.enable == true then
            _G.enable = false 
            sendnotifi("Aim-Viewer Disabled")
        end
    end
   end)
   
   mouse.KeyDown:Connect(function(z)
    if z == _G.swith_nigga then
        target = get_closet()
        sendnotifi("targeting: "..tostring(target.DisplayName))
    end
   end)
   
   local a=Instance.new("Beam")a.Segments=1;a.Width0=0.2;a.Width1=0.2;a.Color=ColorSequence.new(_G.color)a.FaceCamera=true;local b=Instance.new("Attachment")local c=Instance.new("Attachment")a.Attachment0=b;a.Attachment1=c;a.Parent=workspace.Terrain;b.Parent=workspace.Terrain;c.Parent=workspace.Terrain
   
   task.spawn(function()
    rs.RenderStepped:Connect(function()
   
    local character = localPlayer.Character
        if not character then
        a.Enabled = false
        return
    end
   
   
   
   
   
   
    if _G.enable  and getgun() and target.Character:FindFirstChild("BodyEffects") and target.Character:FindFirstChild("Head")  then
        a.Enabled = true
        b.Position =  target.Character:FindFirstChild("Head").Position
        c.Position = target.Character.BodyEffects[_G.method].Value ---edit this if some random ass game got some weird ass other name :palingface
    else
        a.Enabled = false
    end
   
    end)
   end)
end)



local Section1 = Tab1:NewSection("Anti")
local Button1 = Tab1:NewButton("Antilock | C to toggle", function()
    print("one")
    loadstring(game:HttpGet("https://raw.githubusercontent.com/tier1joshh/AntiAimlock/main/AntiAimlock"))()
end)

local Button1 = Tab1:NewButton("Antilock | Sky", function()
    getgenv().Sky = true 
    getgenv().SkyAmount = 825
    
    game:GetService("RunService").heartbeat:Connect(function()
        if getgenv().Sky ~= false then 
        local vel = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity
        game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,      getgenv().SkyAmount,0) 
        game:GetService("RunService").RenderStepped:Wait()
        game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = vel
        end 
    end)
end)



local Slider1 = Tab1:NewSlider("Change FOV", "", true, "/", {min = 75, max = 120, default = 75}, function(value)
    print(value)
    game:GetService'Workspace'.Camera.FieldOfView = value
end)


local Section1 = Tab1:NewSection("Auto")


local Toggle1 = Tab1:NewToggle("Reload | Auto", false, function(r)
    local vers = value and "on" or "off"
    print("one " .. vers)
    if r == true then
        game:GetService('RunService'):BindToRenderStep("Auto-Reload", 0 , function()
            if game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool") then
                if game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool"):FindFirstChild("Ammo") then
                    if game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool"):FindFirstChild("Ammo").Value <= 0 then
                        game:GetService("ReplicatedStorage").MainEvent:FireServer("Reload", game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool")) 
                        wait(1)
                    end
                end
            end
        end)
    elseif r == false then
        game:GetService('RunService'):UnbindFromRenderStep("Auto-Reload")
    end
end)



local Tab1 = Init:NewTab("Exploits")

local Section1 = Tab1:NewSection("Exploits")
local Button1 = Tab1:NewButton("Fly | X to toggle", function()
    print("one")
    local L_152_
    local L_153_ = game.Players.LocalPlayer
    IYMouse = L_153_:GetMouse()
    IYMouse.KeyDown:connect(
            function(L_154_arg0)
        if L_154_arg0 == "x" then
            if L_152_ then
                L_152_ = false
                fly()
            else
                L_152_ = true
                NOFLY()
            end
        end
    end
        )
    for L_155_forvar0, L_156_forvar1 in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if L_156_forvar1:IsA("BasePart") and L_156_forvar1.CanCollide == true then
            L_156_forvar1.CanCollide = false
        end
    end
    FLYING = false
    QEfly = true
    iyflyspeed = 7
    vehicleflyspeed = 7
    function sFLY(L_157_arg0)
        repeat
            wait()
        until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and
                game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
        repeat
            wait()
        until IYMouse
        local L_158_ = game.Players.LocalPlayer.Character.LowerTorso
        local L_159_ = {
            F = 0,
            B = 0,
            L = 0,
            R = 0,
            Q = 0,
            E = 0
        }
        local L_160_ = {
            F = 0,
            B = 0,
            L = 0,
            R = 0,
            Q = 0,
            E = 0
        }
        local L_161_ = 5
        local function L_162_func()
            FLYING = true
            local L_163_ = Instance.new("BodyGyro", L_158_)
            local L_164_ = Instance.new("BodyVelocity", L_158_)
            L_163_.P = 9e4
            L_163_.maxTorque = Vector3.new(9e9, 9e9, 9e9)
            L_163_.cframe = L_158_.CFrame
            L_164_.velocity = Vector3.new(0, 0, 0)
            L_164_.maxForce = Vector3.new(9e9, 9e9, 9e9)
            spawn(
                    function()
                repeat
                    wait()
                    if not L_157_arg0 and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
                        game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").PlatformStand =
                                    true
                    end
                    if L_159_.L + L_159_.R ~= 0 or L_159_.F + L_159_.B ~= 0 or L_159_.Q + L_159_.E ~= 0 then
                        L_161_ = 50
                    elseif not (L_159_.L + L_159_.R ~= 0 or L_159_.F + L_159_.B ~= 0 or L_159_.Q + L_159_.E ~= 0) and L_161_ ~= 0 then
                        L_161_ = 0
                    end
                    if L_159_.L + L_159_.R ~= 0 or L_159_.F + L_159_.B ~= 0 or L_159_.Q + L_159_.E ~= 0 then
                        L_164_.velocity =
                                    (workspace.CurrentCamera.CoordinateFrame.lookVector * (L_159_.F + L_159_.B) +
                                    workspace.CurrentCamera.CoordinateFrame *
                                        CFrame.new(L_159_.L + L_159_.R, (L_159_.F + L_159_.B + L_159_.Q + L_159_.E) * 0.2, 0).p -
                                    workspace.CurrentCamera.CoordinateFrame.p) *
                                    L_161_
                        L_160_ = {
                            F = L_159_.F,
                            B = L_159_.B,
                            L = L_159_.L,
                            R = L_159_.R
                        }
                    elseif L_159_.L + L_159_.R == 0 and L_159_.F + L_159_.B == 0 and L_159_.Q + L_159_.E == 0 and L_161_ ~= 0 then
                        L_164_.velocity =
                                    (workspace.CurrentCamera.CoordinateFrame.lookVector * (L_160_.F + L_160_.B) +
                                    workspace.CurrentCamera.CoordinateFrame *
                                        CFrame.new(L_160_.L + L_160_.R, (L_160_.F + L_160_.B + L_159_.Q + L_159_.E) * 0.2, 0).p -
                                    workspace.CurrentCamera.CoordinateFrame.p) *
                                    L_161_
                    else
                        L_164_.velocity = Vector3.new(0, 0, 0)
                    end
                    L_163_.cframe = workspace.CurrentCamera.CoordinateFrame
                until not FLYING
                L_159_ = {
                    F = 0,
                    B = 0,
                    L = 0,
                    R = 0,
                    Q = 0,
                    E = 0
                }
                L_160_ = {
                    F = 0,
                    B = 0,
                    L = 0,
                    R = 0,
                    Q = 0,
                    E = 0
                }
                L_161_ = 0
                L_163_:destroy()
                L_164_:destroy()
                if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
                    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").PlatformStand = false
                end
            end
                )
        end
        IYMouse.KeyDown:connect(
                function(L_165_arg0)
            if L_165_arg0:lower() == "w" then
                if L_157_arg0 then
                    L_159_.F = vehicleflyspeed
                else
                    L_159_.F = iyflyspeed
                end
            elseif L_165_arg0:lower() == "s" then
                if L_157_arg0 then
                    L_159_.B = -vehicleflyspeed
                else
                    L_159_.B = -iyflyspeed
                end
            elseif L_165_arg0:lower() == "a" then
                if L_157_arg0 then
                    L_159_.L = -vehicleflyspeed
                else
                    L_159_.L = -iyflyspeed
                end
            elseif L_165_arg0:lower() == "d" then
                if L_157_arg0 then
                    L_159_.R = vehicleflyspeed
                else
                    L_159_.R = iyflyspeed
                end
        
            end
        end
            )
        IYMouse.KeyUp:connect(
                function(L_166_arg0)
            if L_166_arg0:lower() == "w" then
                L_159_.F = 0
            elseif L_166_arg0:lower() == "s" then
                L_159_.B = 0
            elseif L_166_arg0:lower() == "a" then
                L_159_.L = 0
            elseif L_166_arg0:lower() == "d" then
                L_159_.R = 0 
            end

        end
            )
        L_162_func()
    end
    function NOFLY()
        FLYING = false
        game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").PlatformStand = true
    end
    function fly()
        NOFLY()
        wait()
        sFLY()
    end
end)

local Section1 = Tab1:NewSection("Character")
local Button1 = Tab1:NewButton("Rainbow | Chams", function()
    print("one")
    for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
        if v:IsA("MeshPart") then
            v.Material = "ForceField"
            spawn(function()
                while wait() do
                    for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                        if v:IsA("MeshPart") then
                            v.Color = Color3.fromHSV(tick()%5/5,1,1)
                            wait()
                        end
                    end 
                end
            end)
        end
    end
end)

local Section1 = Tab1:NewSection("Humanmodifications")
local Button1 = Tab1:NewButton("Antislow", function()
    print("one")
    local mt = getrawmetatable(game)
    local backup
    backup = hookfunction(mt.__newindex, newcclosure(function(self, key, value)
    if key == "WalkSpeed" and value < 16 then
    value = 16
    end
    return backup(self, key, value)
    end))
end)

local Button1 = Tab1:NewButton("No jump cooldown", function()
    print("one")
    loadstring(game:HttpGet('https://raw.githubusercontent.com/eksotopro/holders/main/no-jump-cooldown.lua'))()
end)

local Section1 = Tab1:NewSection("Other")
local Button1 = Tab1:NewButton("Cash aura", function()
    print("one")
    while wait() do
 
 
        local function getMoneyAroundMe() 
            for i, money in ipairs(game.Workspace.Ignored.Drop:GetChildren()) do
                if money.Name == "MoneyDrop" and (money.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 20 then
                    fireclickdetector(money.ClickDetector)
                end  
            end
        end
         
         getMoneyAroundMe()
        end
           
         
end)

        -- // Changing title

        local increment = 0.2
        local waittime = 5
        task.spawn(function()
            while true do 
                Init:Text("0")
                wait(increment)
                Init:Text("0C")
                wait(increment)
                Init:Text("0Co")
                wait(increment)
                Init:Text("0Com")
                wait(increment)
                Init:Text("0Comp")
                wait(increment)
                Init:Text("0Comp.")
                wait(increment)
                Init:Text("0Comp.l")
                wait(increment)
                Init:Text("0Comp.lu")
                wait(increment)
                Init:Text("0Comp.lua")
                wait(increment)
                Init:Text("0Comp.lua ")
                wait(increment)
                Init:Text("0Comp.lua ;")
                wait(increment)
                Init:Text("0Comp.lua ; ")
                wait(increment)
                Init:Text("0Comp.lua ; #")
                wait(increment)
                Init:Text("0Comp.lua ; #1")
                wait(waittime)
                Init:Text(" Comp.lua ; #1")
                wait(increment)
                Init:Text("  omp.lua ; #1")
                wait(increment)
                Init:Text("   mp.lua ; #1")
                wait(increment)
                Init:Text("    p.lua ; #1")
                wait(increment)
                Init:Text("     .lua ; #1")
                wait(increment)
                Init:Text("      lua ; #1")
                wait(increment)
                Init:Text("       ua ; #1")
                wait(increment)
                Init:Text("        a ; #1")
                wait(increment)
                Init:Text("          ; #1")
                wait(increment)
                Init:Text("          ; #1")
                wait(increment)
                Init:Text("            #1")
                wait(increment)
                Init:Text("            #1")
                wait(increment)
                Init:Text("             1")
                wait(increment)
                Init:Text("")
                wait(increment)

        
                Init:Text(".")
                wait(increment)
                Init:Text(".g")
                wait(increment)
                Init:Text(".gg")
                wait(increment)
                Init:Text(".gg/")
                wait(increment)
                Init:Text(".gg/K")
                wait(increment)
                Init:Text(".gg/K9")
                wait(increment)
                Init:Text(".gg/K9N")
                wait(increment)
                Init:Text(".gg/K9NP")
                wait(increment)
                Init:Text(".gg/K9NPn")
                wait(increment)
                Init:Text(".gg/K9NPnR")
                wait(increment)
                Init:Text(".gg/K9NPnRp")
                wait(waittime)
                Init:Text(".gg/K9NPnRpq")
                wait(increment)
                Init:Text(".gg/K9NPnRpqT")
                wait(increment)
                Init:Text(".gg/K9NPnRpqTt")
                wait(increment)
                Init:Text(".gg/K9NPnRpqTt")
                wait(increment)
                Init:Text(" gg/K9NPnRpqTt")
                wait(increment)
                Init:Text("  g/K9NPnRpqTt")
                wait(increment)
                Init:Text("   /K9NPnRpqTt")
                wait(increment)
                Init:Text("    K9NPnRpqTt")
                wait(increment)
                Init:Text("     9NPnRpqTt")
                wait(increment)
                Init:Text("      NPnRpqTt")
                wait(increment)
                Init:Text("       PnRpqTt")
                wait(increment)
                Init:Text("        nRpqTt")
                wait(increment)
                Init:Text("         RpqTt")
                wait(increment)
                Init:Text("          pqTt")
                wait(increment)
                Init:Text("           qTt")
                wait(increment)
                Init:Text("            Tt")
                wait(increment)
                Init:Text("             t")
                wait(increment)
                Init:Text("")
                wait(increment)
            end
        end)



    elseif v ~= HWID then
        print("The HWID is not Whitelisted. HWID: ", HWID)
    end
end
